// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: byteplus/vod/response/response_vod.proto

package response

import (
	reflect "reflect"
	sync "sync"

	base "github.com/byteplus-sdk/byteplus-sdk-golang/service/base/models/base"
	business "github.com/byteplus-sdk/byteplus-sdk-golang/service/vod/models/business"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VodGetAllPlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodAllPlayInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAllPlayInfoResponse) Reset() {
	*x = VodGetAllPlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAllPlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAllPlayInfoResponse) ProtoMessage() {}

func (x *VodGetAllPlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAllPlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetAllPlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{0}
}

func (x *VodGetAllPlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAllPlayInfoResponse) GetResult() *business.VodAllPlayInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetPlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodPlayInfoModel `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetPlayInfoResponse) Reset() {
	*x = VodGetPlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlayInfoResponse) ProtoMessage() {}

func (x *VodGetPlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetPlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{1}
}

func (x *VodGetPlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetPlayInfoResponse) GetResult() *business.VodPlayInfoModel {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetOriginalPlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetOriginalPlayInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetOriginalPlayInfoResponse) Reset() {
	*x = VodGetOriginalPlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetOriginalPlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetOriginalPlayInfoResponse) ProtoMessage() {}

func (x *VodGetOriginalPlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetOriginalPlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetOriginalPlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{2}
}

func (x *VodGetOriginalPlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetOriginalPlayInfoResponse) GetResult() *business.VodGetOriginalPlayInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetPrivateDrmPlayAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetPrivateDrmPlayAuthResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetPrivateDrmPlayAuthResponse) Reset() {
	*x = VodGetPrivateDrmPlayAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPrivateDrmPlayAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPrivateDrmPlayAuthResponse) ProtoMessage() {}

func (x *VodGetPrivateDrmPlayAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPrivateDrmPlayAuthResponse.ProtoReflect.Descriptor instead.
func (*VodGetPrivateDrmPlayAuthResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{3}
}

func (x *VodGetPrivateDrmPlayAuthResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetPrivateDrmPlayAuthResponse) GetResult() *business.VodGetPrivateDrmPlayAuthResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetHlsDecryptionKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetHlsDecryptionKeyResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetHlsDecryptionKeyResponse) Reset() {
	*x = VodGetHlsDecryptionKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetHlsDecryptionKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetHlsDecryptionKeyResponse) ProtoMessage() {}

func (x *VodGetHlsDecryptionKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetHlsDecryptionKeyResponse.ProtoReflect.Descriptor instead.
func (*VodGetHlsDecryptionKeyResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{4}
}

func (x *VodGetHlsDecryptionKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetHlsDecryptionKeyResponse) GetResult() *business.VodGetHlsDecryptionKeyResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateHlsDecryptionKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodCreateHlsDecryptionKeyResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodCreateHlsDecryptionKeyResponse) Reset() {
	*x = VodCreateHlsDecryptionKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateHlsDecryptionKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateHlsDecryptionKeyResponse) ProtoMessage() {}

func (x *VodCreateHlsDecryptionKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateHlsDecryptionKeyResponse.ProtoReflect.Descriptor instead.
func (*VodCreateHlsDecryptionKeyResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{5}
}

func (x *VodCreateHlsDecryptionKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateHlsDecryptionKeyResponse) GetResult() *business.VodCreateHlsDecryptionKeyResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetPlayInfoWithLiveTimeShiftSceneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetPlayInfoWithLiveTimeShiftSceneResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) Reset() {
	*x = VodGetPlayInfoWithLiveTimeShiftSceneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlayInfoWithLiveTimeShiftSceneResponse) ProtoMessage() {}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlayInfoWithLiveTimeShiftSceneResponse.ProtoReflect.Descriptor instead.
func (*VodGetPlayInfoWithLiveTimeShiftSceneResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{6}
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) GetResult() *business.VodGetPlayInfoWithLiveTimeShiftSceneResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUploadMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 视频上传结果
	Result *business.VodCommitData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodUploadMediaResponse) Reset() {
	*x = VodUploadMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadMediaResponse) ProtoMessage() {}

func (x *VodUploadMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadMediaResponse.ProtoReflect.Descriptor instead.
func (*VodUploadMediaResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{7}
}

func (x *VodUploadMediaResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUploadMediaResponse) GetResult() *business.VodCommitData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodQueryUploadTaskInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// URL批量上传状态查询结果
	Result *business.VodQueryData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodQueryUploadTaskInfoResponse) Reset() {
	*x = VodQueryUploadTaskInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryUploadTaskInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryUploadTaskInfoResponse) ProtoMessage() {}

func (x *VodQueryUploadTaskInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryUploadTaskInfoResponse.ProtoReflect.Descriptor instead.
func (*VodQueryUploadTaskInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{8}
}

func (x *VodQueryUploadTaskInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodQueryUploadTaskInfoResponse) GetResult() *business.VodQueryData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUrlUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// URL批量上传结果
	Result *business.VodUrlResponseData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodUrlUploadResponse) Reset() {
	*x = VodUrlUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadResponse) ProtoMessage() {}

func (x *VodUrlUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadResponse.ProtoReflect.Descriptor instead.
func (*VodUrlUploadResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{9}
}

func (x *VodUrlUploadResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUrlUploadResponse) GetResult() *business.VodUrlResponseData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodApplyUploadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 视频上传 1001 阶段返回结果
	Result *business.VodApplyUploadInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodApplyUploadInfoResponse) Reset() {
	*x = VodApplyUploadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoResponse) ProtoMessage() {}

func (x *VodApplyUploadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoResponse.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{10}
}

func (x *VodApplyUploadInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodApplyUploadInfoResponse) GetResult() *business.VodApplyUploadInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCommitUploadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 视频上传 1005 阶段返回结果
	Result *business.VodCommitUploadInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodCommitUploadInfoResponse) Reset() {
	*x = VodCommitUploadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoResponse) ProtoMessage() {}

func (x *VodCommitUploadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoResponse.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{11}
}

func (x *VodCommitUploadInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCommitUploadInfoResponse) GetResult() *business.VodCommitUploadInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetMediaInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetMediaInfosData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetMediaInfosResponse) Reset() {
	*x = VodGetMediaInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaInfosResponse) ProtoMessage() {}

func (x *VodGetMediaInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaInfosResponse.ProtoReflect.Descriptor instead.
func (*VodGetMediaInfosResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{12}
}

func (x *VodGetMediaInfosResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetMediaInfosResponse) GetResult() *business.VodGetMediaInfosData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateMediaInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateMediaInfoResponse) Reset() {
	*x = VodUpdateMediaInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaInfoResponse) ProtoMessage() {}

func (x *VodUpdateMediaInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaInfoResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{13}
}

func (x *VodUpdateMediaInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetRecommendedPosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetRecPosterData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetRecommendedPosterResponse) Reset() {
	*x = VodGetRecommendedPosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetRecommendedPosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetRecommendedPosterResponse) ProtoMessage() {}

func (x *VodGetRecommendedPosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetRecommendedPosterResponse.ProtoReflect.Descriptor instead.
func (*VodGetRecommendedPosterResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{14}
}

func (x *VodGetRecommendedPosterResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetRecommendedPosterResponse) GetResult() *business.VodGetRecPosterData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateMediaPublishStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateMediaPublishStatusResponse) Reset() {
	*x = VodUpdateMediaPublishStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaPublishStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaPublishStatusResponse) ProtoMessage() {}

func (x *VodUpdateMediaPublishStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaPublishStatusResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaPublishStatusResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{15}
}

func (x *VodUpdateMediaPublishStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateMediaStorageClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodUpdateMediaStorageClassData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodUpdateMediaStorageClassResponse) Reset() {
	*x = VodUpdateMediaStorageClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaStorageClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaStorageClassResponse) ProtoMessage() {}

func (x *VodUpdateMediaStorageClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaStorageClassResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaStorageClassResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{16}
}

func (x *VodUpdateMediaStorageClassResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUpdateMediaStorageClassResponse) GetResult() *business.VodUpdateMediaStorageClassData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDeleteMediaData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDeleteMediaResponse) Reset() {
	*x = VodDeleteMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteMediaResponse) ProtoMessage() {}

func (x *VodDeleteMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteMediaResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteMediaResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{17}
}

func (x *VodDeleteMediaResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDeleteMediaResponse) GetResult() *business.VodDeleteMediaData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteTranscodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDeleteTranscodesData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDeleteTranscodesResponse) Reset() {
	*x = VodDeleteTranscodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteTranscodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteTranscodesResponse) ProtoMessage() {}

func (x *VodDeleteTranscodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteTranscodesResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteTranscodesResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{18}
}

func (x *VodDeleteTranscodesResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDeleteTranscodesResponse) GetResult() *business.VodDeleteTranscodesData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetMediaListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetMediaListData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetMediaListResponse) Reset() {
	*x = VodGetMediaListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaListResponse) ProtoMessage() {}

func (x *VodGetMediaListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaListResponse.ProtoReflect.Descriptor instead.
func (*VodGetMediaListResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{19}
}

func (x *VodGetMediaListResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetMediaListResponse) GetResult() *business.VodGetMediaListData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetSubtitleInfoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetSubtitleInfoListData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetSubtitleInfoListResponse) Reset() {
	*x = VodGetSubtitleInfoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSubtitleInfoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSubtitleInfoListResponse) ProtoMessage() {}

func (x *VodGetSubtitleInfoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSubtitleInfoListResponse.ProtoReflect.Descriptor instead.
func (*VodGetSubtitleInfoListResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{20}
}

func (x *VodGetSubtitleInfoListResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetSubtitleInfoListResponse) GetResult() *business.VodGetSubtitleInfoListData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateSubtitleStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodUpdateSubtitleStatusData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodUpdateSubtitleStatusResponse) Reset() {
	*x = VodUpdateSubtitleStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSubtitleStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSubtitleStatusResponse) ProtoMessage() {}

func (x *VodUpdateSubtitleStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSubtitleStatusResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateSubtitleStatusResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{21}
}

func (x *VodUpdateSubtitleStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUpdateSubtitleStatusResponse) GetResult() *business.VodUpdateSubtitleStatusData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateSubtitleInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateSubtitleInfoResponse) Reset() {
	*x = VodUpdateSubtitleInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSubtitleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSubtitleInfoResponse) ProtoMessage() {}

func (x *VodUpdateSubtitleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSubtitleInfoResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateSubtitleInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{22}
}

func (x *VodUpdateSubtitleInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetAuditFramesForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetFramesForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAuditFramesForAuditResponse) Reset() {
	*x = VodGetAuditFramesForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAuditFramesForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAuditFramesForAuditResponse) ProtoMessage() {}

func (x *VodGetAuditFramesForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAuditFramesForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetAuditFramesForAuditResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{23}
}

func (x *VodGetAuditFramesForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAuditFramesForAuditResponse) GetResult() *business.VodGetFramesForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetMLFramesForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetFramesForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetMLFramesForAuditResponse) Reset() {
	*x = VodGetMLFramesForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMLFramesForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMLFramesForAuditResponse) ProtoMessage() {}

func (x *VodGetMLFramesForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMLFramesForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetMLFramesForAuditResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{24}
}

func (x *VodGetMLFramesForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetMLFramesForAuditResponse) GetResult() *business.VodGetFramesForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetBetterFramesForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetBetterFramesForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetBetterFramesForAuditResponse) Reset() {
	*x = VodGetBetterFramesForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetBetterFramesForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetBetterFramesForAuditResponse) ProtoMessage() {}

func (x *VodGetBetterFramesForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetBetterFramesForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetBetterFramesForAuditResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{25}
}

func (x *VodGetBetterFramesForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetBetterFramesForAuditResponse) GetResult() *business.VodGetBetterFramesForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetAudioInfoForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetAudioInfoForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAudioInfoForAuditResponse) Reset() {
	*x = VodGetAudioInfoForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAudioInfoForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAudioInfoForAuditResponse) ProtoMessage() {}

func (x *VodGetAudioInfoForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAudioInfoForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetAudioInfoForAuditResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{26}
}

func (x *VodGetAudioInfoForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAudioInfoForAuditResponse) GetResult() *business.VodGetAudioInfoForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetAutomaticSpeechRecognitionForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetAutomaticSpeechRecognitionForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) Reset() {
	*x = VodGetAutomaticSpeechRecognitionForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAutomaticSpeechRecognitionForAuditResponse) ProtoMessage() {}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAutomaticSpeechRecognitionForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetAutomaticSpeechRecognitionForAuditResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{27}
}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) GetResult() *business.VodGetAutomaticSpeechRecognitionForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetAudioEventDetectionForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetAudioEventDetectionForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAudioEventDetectionForAuditResponse) Reset() {
	*x = VodGetAudioEventDetectionForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAudioEventDetectionForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAudioEventDetectionForAuditResponse) ProtoMessage() {}

func (x *VodGetAudioEventDetectionForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAudioEventDetectionForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetAudioEventDetectionForAuditResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{28}
}

func (x *VodGetAudioEventDetectionForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAudioEventDetectionForAuditResponse) GetResult() *business.VodGetAudioEventDetectionForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateVideoClassificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCreateVideoClassificationData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodCreateVideoClassificationResponse) Reset() {
	*x = VodCreateVideoClassificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateVideoClassificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateVideoClassificationResponse) ProtoMessage() {}

func (x *VodCreateVideoClassificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateVideoClassificationResponse.ProtoReflect.Descriptor instead.
func (*VodCreateVideoClassificationResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{29}
}

func (x *VodCreateVideoClassificationResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateVideoClassificationResponse) GetResult() *business.VodCreateVideoClassificationData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateVideoClassificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateVideoClassificationResponse) Reset() {
	*x = VodUpdateVideoClassificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateVideoClassificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateVideoClassificationResponse) ProtoMessage() {}

func (x *VodUpdateVideoClassificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateVideoClassificationResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateVideoClassificationResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{30}
}

func (x *VodUpdateVideoClassificationResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteVideoClassificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodDeleteVideoClassificationResponse) Reset() {
	*x = VodDeleteVideoClassificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteVideoClassificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteVideoClassificationResponse) ProtoMessage() {}

func (x *VodDeleteVideoClassificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteVideoClassificationResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteVideoClassificationResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{31}
}

func (x *VodDeleteVideoClassificationResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodListVideoClassificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodVideoClassificationsData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListVideoClassificationsResponse) Reset() {
	*x = VodListVideoClassificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListVideoClassificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListVideoClassificationsResponse) ProtoMessage() {}

func (x *VodListVideoClassificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListVideoClassificationsResponse.ProtoReflect.Descriptor instead.
func (*VodListVideoClassificationsResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{32}
}

func (x *VodListVideoClassificationsResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListVideoClassificationsResponse) GetResult() *business.VodVideoClassificationsData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListSnapshotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodSnapshotData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListSnapshotsResponse) Reset() {
	*x = VodListSnapshotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListSnapshotsResponse) ProtoMessage() {}

func (x *VodListSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*VodListSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{33}
}

func (x *VodListSnapshotsResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListSnapshotsResponse) GetResult() *business.VodSnapshotData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetFileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetMediaInfosData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetFileListResponse) Reset() {
	*x = VodGetFileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetFileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetFileListResponse) ProtoMessage() {}

func (x *VodGetFileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetFileListResponse.ProtoReflect.Descriptor instead.
func (*VodGetFileListResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{34}
}

func (x *VodGetFileListResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetFileListResponse) GetResult() *business.VodGetMediaInfosData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodExtractMediaMetaTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodExtractMediaMetaTaskResponse) Reset() {
	*x = VodExtractMediaMetaTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodExtractMediaMetaTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodExtractMediaMetaTaskResponse) ProtoMessage() {}

func (x *VodExtractMediaMetaTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodExtractMediaMetaTaskResponse.ProtoReflect.Descriptor instead.
func (*VodExtractMediaMetaTaskResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{35}
}

func (x *VodExtractMediaMetaTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

// **********************************************************************
// 转码
// **********************************************************************
type VodStartWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodStartWorkflowResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodStartWorkflowResponse) Reset() {
	*x = VodStartWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStartWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStartWorkflowResponse) ProtoMessage() {}

func (x *VodStartWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStartWorkflowResponse.ProtoReflect.Descriptor instead.
func (*VodStartWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{36}
}

func (x *VodStartWorkflowResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodStartWorkflowResponse) GetResult() *business.VodStartWorkflowResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodRetrieveTranscodeResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.TranscodeResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodRetrieveTranscodeResultResponse) Reset() {
	*x = VodRetrieveTranscodeResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodRetrieveTranscodeResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodRetrieveTranscodeResultResponse) ProtoMessage() {}

func (x *VodRetrieveTranscodeResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodRetrieveTranscodeResultResponse.ProtoReflect.Descriptor instead.
func (*VodRetrieveTranscodeResultResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{37}
}

func (x *VodRetrieveTranscodeResultResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodRetrieveTranscodeResultResponse) GetResult() *business.TranscodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListWorkflowExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodListWorkflowExecutionResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodListWorkflowExecutionResponse) Reset() {
	*x = VodListWorkflowExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListWorkflowExecutionResponse) ProtoMessage() {}

func (x *VodListWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*VodListWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{38}
}

func (x *VodListWorkflowExecutionResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListWorkflowExecutionResponse) GetResult() *business.VodListWorkflowExecutionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetWorkflowExecutionDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetWorkflowExecutionDetailResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetWorkflowExecutionDetailResponse) Reset() {
	*x = VodGetWorkflowExecutionDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetWorkflowExecutionDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetWorkflowExecutionDetailResponse) ProtoMessage() {}

func (x *VodGetWorkflowExecutionDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetWorkflowExecutionDetailResponse.ProtoReflect.Descriptor instead.
func (*VodGetWorkflowExecutionDetailResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{39}
}

func (x *VodGetWorkflowExecutionDetailResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetWorkflowExecutionDetailResponse) GetResult() *business.VodGetWorkflowExecutionDetailResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetWorkflowExecutionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.WorkflowExecution `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetWorkflowExecutionStatusResponse) Reset() {
	*x = VodGetWorkflowExecutionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetWorkflowExecutionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetWorkflowExecutionStatusResponse) ProtoMessage() {}

func (x *VodGetWorkflowExecutionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetWorkflowExecutionStatusResponse.ProtoReflect.Descriptor instead.
func (*VodGetWorkflowExecutionStatusResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{40}
}

func (x *VodGetWorkflowExecutionStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetWorkflowExecutionStatusResponse) GetResult() *business.WorkflowExecution {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetWorkflowResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodWorkflowResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetWorkflowResultResponse) Reset() {
	*x = VodGetWorkflowResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetWorkflowResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetWorkflowResultResponse) ProtoMessage() {}

func (x *VodGetWorkflowResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetWorkflowResultResponse.ProtoReflect.Descriptor instead.
func (*VodGetWorkflowResultResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{41}
}

func (x *VodGetWorkflowResultResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetWorkflowResultResponse) GetResult() *business.VodWorkflowResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 视频编辑
// **********************************************************************
type VodSubmitDirectEditTaskAsyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.SubmitDirectEditTaskAsyncResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodSubmitDirectEditTaskAsyncResponse) Reset() {
	*x = VodSubmitDirectEditTaskAsyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitDirectEditTaskAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitDirectEditTaskAsyncResponse) ProtoMessage() {}

func (x *VodSubmitDirectEditTaskAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitDirectEditTaskAsyncResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitDirectEditTaskAsyncResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{42}
}

func (x *VodSubmitDirectEditTaskAsyncResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitDirectEditTaskAsyncResponse) GetResult() *business.SubmitDirectEditTaskAsyncResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetDirectEditProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.GetDirectEditProgress `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetDirectEditProgressResponse) Reset() {
	*x = VodGetDirectEditProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetDirectEditProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetDirectEditProgressResponse) ProtoMessage() {}

func (x *VodGetDirectEditProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetDirectEditProgressResponse.ProtoReflect.Descriptor instead.
func (*VodGetDirectEditProgressResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{43}
}

func (x *VodGetDirectEditProgressResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetDirectEditProgressResponse) GetResult() *business.GetDirectEditProgress {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetDirectEditResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           []*business.GetDirectEditResult `protobuf:"bytes,2,rep,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetDirectEditResultResponse) Reset() {
	*x = VodGetDirectEditResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetDirectEditResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetDirectEditResultResponse) ProtoMessage() {}

func (x *VodGetDirectEditResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetDirectEditResultResponse.ProtoReflect.Descriptor instead.
func (*VodGetDirectEditResultResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{44}
}

func (x *VodGetDirectEditResultResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetDirectEditResultResponse) GetResult() []*business.GetDirectEditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 空间管理
// **********************************************************************
type VodCreateSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodCreateSpaceResponse) Reset() {
	*x = VodCreateSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateSpaceResponse) ProtoMessage() {}

func (x *VodCreateSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateSpaceResponse.ProtoReflect.Descriptor instead.
func (*VodCreateSpaceResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{45}
}

func (x *VodCreateSpaceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodListSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           []*business.VodSpaceInfo `protobuf:"bytes,2,rep,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListSpaceResponse) Reset() {
	*x = VodListSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListSpaceResponse) ProtoMessage() {}

func (x *VodListSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListSpaceResponse.ProtoReflect.Descriptor instead.
func (*VodListSpaceResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{46}
}

func (x *VodListSpaceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListSpaceResponse) GetResult() []*business.VodSpaceInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetSpaceDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodSpaceInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetSpaceDetailResponse) Reset() {
	*x = VodGetSpaceDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSpaceDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSpaceDetailResponse) ProtoMessage() {}

func (x *VodGetSpaceDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSpaceDetailResponse.ProtoReflect.Descriptor instead.
func (*VodGetSpaceDetailResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{47}
}

func (x *VodGetSpaceDetailResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetSpaceDetailResponse) GetResult() *business.VodSpaceInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateSpaceResponse) Reset() {
	*x = VodUpdateSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSpaceResponse) ProtoMessage() {}

func (x *VodUpdateSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSpaceResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateSpaceResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{48}
}

func (x *VodUpdateSpaceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateSpaceUploadConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateSpaceUploadConfigResponse) Reset() {
	*x = VodUpdateSpaceUploadConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSpaceUploadConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSpaceUploadConfigResponse) ProtoMessage() {}

func (x *VodUpdateSpaceUploadConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSpaceUploadConfigResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateSpaceUploadConfigResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{49}
}

func (x *VodUpdateSpaceUploadConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDescribeVodSpaceStorageDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodDescribeVodSpaceStorageDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodDescribeVodSpaceStorageDataResponse) Reset() {
	*x = VodDescribeVodSpaceStorageDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeVodSpaceStorageDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeVodSpaceStorageDataResponse) ProtoMessage() {}

func (x *VodDescribeVodSpaceStorageDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeVodSpaceStorageDataResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeVodSpaceStorageDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{50}
}

func (x *VodDescribeVodSpaceStorageDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeVodSpaceStorageDataResponse) GetResult() *business.VodDescribeVodSpaceStorageDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 分发加速管理
// **********************************************************************
type VodStartDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodStartDomainResponse) Reset() {
	*x = VodStartDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStartDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStartDomainResponse) ProtoMessage() {}

func (x *VodStartDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStartDomainResponse.ProtoReflect.Descriptor instead.
func (*VodStartDomainResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{51}
}

func (x *VodStartDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodStopDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodStopDomainResponse) Reset() {
	*x = VodStopDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStopDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStopDomainResponse) ProtoMessage() {}

func (x *VodStopDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStopDomainResponse.ProtoReflect.Descriptor instead.
func (*VodStopDomainResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{52}
}

func (x *VodStopDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateDomainPlayRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *VodUpdateDomainPlayRuleResponse) Reset() {
	*x = VodUpdateDomainPlayRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateDomainPlayRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateDomainPlayRuleResponse) ProtoMessage() {}

func (x *VodUpdateDomainPlayRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateDomainPlayRuleResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateDomainPlayRuleResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{53}
}

func (x *VodUpdateDomainPlayRuleResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodAddDomainToSchedulerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodAddDomainToSchedulerResponse) Reset() {
	*x = VodAddDomainToSchedulerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodAddDomainToSchedulerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodAddDomainToSchedulerResponse) ProtoMessage() {}

func (x *VodAddDomainToSchedulerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodAddDomainToSchedulerResponse.ProtoReflect.Descriptor instead.
func (*VodAddDomainToSchedulerResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{54}
}

func (x *VodAddDomainToSchedulerResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodRemoveDomainFromSchedulerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodRemoveDomainFromSchedulerResponse) Reset() {
	*x = VodRemoveDomainFromSchedulerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodRemoveDomainFromSchedulerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodRemoveDomainFromSchedulerResponse) ProtoMessage() {}

func (x *VodRemoveDomainFromSchedulerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodRemoveDomainFromSchedulerResponse.ProtoReflect.Descriptor instead.
func (*VodRemoveDomainFromSchedulerResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{55}
}

func (x *VodRemoveDomainFromSchedulerResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodListDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDomainConfigInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListDomainResponse) Reset() {
	*x = VodListDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListDomainResponse) ProtoMessage() {}

func (x *VodListDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListDomainResponse.ProtoReflect.Descriptor instead.
func (*VodListDomainResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{56}
}

func (x *VodListDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListDomainResponse) GetResult() *business.VodDomainConfigInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateCdnRefreshTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCreateCdnTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodCreateCdnRefreshTaskResponse) Reset() {
	*x = VodCreateCdnRefreshTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateCdnRefreshTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateCdnRefreshTaskResponse) ProtoMessage() {}

func (x *VodCreateCdnRefreshTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateCdnRefreshTaskResponse.ProtoReflect.Descriptor instead.
func (*VodCreateCdnRefreshTaskResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{57}
}

func (x *VodCreateCdnRefreshTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateCdnRefreshTaskResponse) GetResult() *business.VodCreateCdnTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateCdnPreloadTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCreateCdnTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodCreateCdnPreloadTaskResponse) Reset() {
	*x = VodCreateCdnPreloadTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateCdnPreloadTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateCdnPreloadTaskResponse) ProtoMessage() {}

func (x *VodCreateCdnPreloadTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateCdnPreloadTaskResponse.ProtoReflect.Descriptor instead.
func (*VodCreateCdnPreloadTaskResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{58}
}

func (x *VodCreateCdnPreloadTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateCdnPreloadTaskResponse) GetResult() *business.VodCreateCdnTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCdnTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnTasksResponse) Reset() {
	*x = VodListCdnTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnTasksResponse) ProtoMessage() {}

func (x *VodListCdnTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnTasksResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnTasksResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{59}
}

func (x *VodListCdnTasksResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnTasksResponse) GetResult() *business.VodCdnTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnAccessLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListCdnAccessLogResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnAccessLogResponse) Reset() {
	*x = VodListCdnAccessLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnAccessLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnAccessLogResponse) ProtoMessage() {}

func (x *VodListCdnAccessLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnAccessLogResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnAccessLogResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{60}
}

func (x *VodListCdnAccessLogResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnAccessLogResponse) GetResult() *business.VodListCdnAccessLogResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnTopAccessUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListCdnTopAccessUrlResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnTopAccessUrlResponse) Reset() {
	*x = VodListCdnTopAccessUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnTopAccessUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnTopAccessUrlResponse) ProtoMessage() {}

func (x *VodListCdnTopAccessUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnTopAccessUrlResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnTopAccessUrlResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{61}
}

func (x *VodListCdnTopAccessUrlResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnTopAccessUrlResponse) GetResult() *business.VodListCdnTopAccessUrlResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnTopAccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListCdnTopAccessResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnTopAccessResponse) Reset() {
	*x = VodListCdnTopAccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnTopAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnTopAccessResponse) ProtoMessage() {}

func (x *VodListCdnTopAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnTopAccessResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnTopAccessResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{62}
}

func (x *VodListCdnTopAccessResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnTopAccessResponse) GetResult() *business.VodListCdnTopAccessResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDescribeVodDomainBandwidthDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDescribeVodDomainBandwidthDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDescribeVodDomainBandwidthDataResponse) Reset() {
	*x = VodDescribeVodDomainBandwidthDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeVodDomainBandwidthDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeVodDomainBandwidthDataResponse) ProtoMessage() {}

func (x *VodDescribeVodDomainBandwidthDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeVodDomainBandwidthDataResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeVodDomainBandwidthDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{63}
}

func (x *VodDescribeVodDomainBandwidthDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeVodDomainBandwidthDataResponse) GetResult() *business.VodDescribeVodDomainBandwidthDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCdnStatisticsCommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCdnStatisticsCommonResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodCdnStatisticsCommonResponse) Reset() {
	*x = VodCdnStatisticsCommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCdnStatisticsCommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCdnStatisticsCommonResponse) ProtoMessage() {}

func (x *VodCdnStatisticsCommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCdnStatisticsCommonResponse.ProtoReflect.Descriptor instead.
func (*VodCdnStatisticsCommonResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{64}
}

func (x *VodCdnStatisticsCommonResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCdnStatisticsCommonResponse) GetResult() *business.VodCdnStatisticsCommonResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnUsageDataDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListCdnUsageDataDetailResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnUsageDataDetailResponse) Reset() {
	*x = VodListCdnUsageDataDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnUsageDataDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnUsageDataDetailResponse) ProtoMessage() {}

func (x *VodListCdnUsageDataDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnUsageDataDetailResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnUsageDataDetailResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{65}
}

func (x *VodListCdnUsageDataDetailResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnUsageDataDetailResponse) GetResult() *business.VodListCdnUsageDataDetailResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnStatusDataDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListCdnStatusDataDetailResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnStatusDataDetailResponse) Reset() {
	*x = VodListCdnStatusDataDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnStatusDataDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnStatusDataDetailResponse) ProtoMessage() {}

func (x *VodListCdnStatusDataDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnStatusDataDetailResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnStatusDataDetailResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{66}
}

func (x *VodListCdnStatusDataDetailResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnStatusDataDetailResponse) GetResult() *business.VodListCdnStatusDataDetailResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDescribeIPInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           []*business.VodCdnIpInfo `protobuf:"bytes,2,rep,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDescribeIPInfoResponse) Reset() {
	*x = VodDescribeIPInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeIPInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeIPInfoResponse) ProtoMessage() {}

func (x *VodDescribeIPInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeIPInfoResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeIPInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{67}
}

func (x *VodDescribeIPInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeIPInfoResponse) GetResult() []*business.VodCdnIpInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDescribeVodDomainTrafficDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodDescribeVodDomainTrafficDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodDescribeVodDomainTrafficDataResponse) Reset() {
	*x = VodDescribeVodDomainTrafficDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeVodDomainTrafficDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeVodDomainTrafficDataResponse) ProtoMessage() {}

func (x *VodDescribeVodDomainTrafficDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeVodDomainTrafficDataResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeVodDomainTrafficDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{68}
}

func (x *VodDescribeVodDomainTrafficDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeVodDomainTrafficDataResponse) GetResult() *business.VodDescribeVodDomainTrafficDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSubmitBlockTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodSubmitBlockTasksResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodSubmitBlockTasksResponse) Reset() {
	*x = VodSubmitBlockTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitBlockTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitBlockTasksResponse) ProtoMessage() {}

func (x *VodSubmitBlockTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitBlockTasksResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitBlockTasksResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{69}
}

func (x *VodSubmitBlockTasksResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitBlockTasksResponse) GetResult() *business.VodSubmitBlockTasksResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetContentBlockTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetContentBlockTasksResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetContentBlockTasksResponse) Reset() {
	*x = VodGetContentBlockTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetContentBlockTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetContentBlockTasksResponse) ProtoMessage() {}

func (x *VodGetContentBlockTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetContentBlockTasksResponse.ProtoReflect.Descriptor instead.
func (*VodGetContentBlockTasksResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{70}
}

func (x *VodGetContentBlockTasksResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetContentBlockTasksResponse) GetResult() *business.VodGetContentBlockTasksResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateDomainV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodCreateDomainV2Response) Reset() {
	*x = VodCreateDomainV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateDomainV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateDomainV2Response) ProtoMessage() {}

func (x *VodCreateDomainV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateDomainV2Response.ProtoReflect.Descriptor instead.
func (*VodCreateDomainV2Response) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{71}
}

func (x *VodCreateDomainV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateDomainExpireV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateDomainExpireV2Response) Reset() {
	*x = VodUpdateDomainExpireV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateDomainExpireV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateDomainExpireV2Response) ProtoMessage() {}

func (x *VodUpdateDomainExpireV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateDomainExpireV2Response.ProtoReflect.Descriptor instead.
func (*VodUpdateDomainExpireV2Response) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{72}
}

func (x *VodUpdateDomainExpireV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateDomainAuthConfigV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateDomainAuthConfigV2Response) Reset() {
	*x = VodUpdateDomainAuthConfigV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateDomainAuthConfigV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateDomainAuthConfigV2Response) ProtoMessage() {}

func (x *VodUpdateDomainAuthConfigV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateDomainAuthConfigV2Response.ProtoReflect.Descriptor instead.
func (*VodUpdateDomainAuthConfigV2Response) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{73}
}

func (x *VodUpdateDomainAuthConfigV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type AddOrUpdateCertificateV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *AddOrUpdateCertificateV2Response) Reset() {
	*x = AddOrUpdateCertificateV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrUpdateCertificateV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateCertificateV2Response) ProtoMessage() {}

func (x *AddOrUpdateCertificateV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateCertificateV2Response.ProtoReflect.Descriptor instead.
func (*AddOrUpdateCertificateV2Response) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{74}
}

func (x *AddOrUpdateCertificateV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

// **********************************************************************
// 回调管理
// **********************************************************************
type VodAddCallbackSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodAddCallbackSubscriptionResponse) Reset() {
	*x = VodAddCallbackSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodAddCallbackSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodAddCallbackSubscriptionResponse) ProtoMessage() {}

func (x *VodAddCallbackSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodAddCallbackSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*VodAddCallbackSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{75}
}

func (x *VodAddCallbackSubscriptionResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodSetCallbackEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodSetCallbackEventResponse) Reset() {
	*x = VodSetCallbackEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSetCallbackEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSetCallbackEventResponse) ProtoMessage() {}

func (x *VodSetCallbackEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSetCallbackEventResponse.ProtoReflect.Descriptor instead.
func (*VodSetCallbackEventResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{76}
}

func (x *VodSetCallbackEventResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

// **********************************************************************
// 智能策略-轻量版
// **********************************************************************
type VodGetSmartStrategyLitePlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetSmartStrategyLitePlayInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetSmartStrategyLitePlayInfoResponse) Reset() {
	*x = VodGetSmartStrategyLitePlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSmartStrategyLitePlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSmartStrategyLitePlayInfoResponse) ProtoMessage() {}

func (x *VodGetSmartStrategyLitePlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSmartStrategyLitePlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetSmartStrategyLitePlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{77}
}

func (x *VodGetSmartStrategyLitePlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetSmartStrategyLitePlayInfoResponse) GetResult() *business.VodGetSmartStrategyLitePlayInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 应用管理
// **********************************************************************
type VodGetAppInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetAppInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetAppInfoResponse) Reset() {
	*x = VodGetAppInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAppInfoResponse) ProtoMessage() {}

func (x *VodGetAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAppInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{78}
}

func (x *VodGetAppInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAppInfoResponse) GetResult() *business.VodGetAppInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 计量计费
// **********************************************************************
// 转码用量
type DescribeVodSpaceTranscodeDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceTranscodeDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceTranscodeDataResponse) Reset() {
	*x = DescribeVodSpaceTranscodeDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{79}
}

func (x *DescribeVodSpaceTranscodeDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResponse) GetResult() *business.DescribeVodSpaceTranscodeDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 媒体AI用量
type DescribeVodSpaceAIStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceAIStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceAIStatisDataResponse) Reset() {
	*x = DescribeVodSpaceAIStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceAIStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceAIStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceAIStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceAIStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceAIStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{80}
}

func (x *DescribeVodSpaceAIStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResponse) GetResult() *business.DescribeVodSpaceAIStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 智能字幕用量
type DescribeVodSpaceSubtitleStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceSubtitleStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) Reset() {
	*x = DescribeVodSpaceSubtitleStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceSubtitleStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceSubtitleStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceSubtitleStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{81}
}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) GetResult() *business.DescribeVodSpaceSubtitleStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 检测修复用量
type DescribeVodSpaceDetectStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceDetectStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceDetectStatisDataResponse) Reset() {
	*x = DescribeVodSpaceDetectStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceDetectStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceDetectStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceDetectStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceDetectStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceDetectStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{82}
}

func (x *DescribeVodSpaceDetectStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResponse) GetResult() *business.DescribeVodSpaceDetectStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播截图用量
type DescribeVodSnapshotDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSnapshotDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSnapshotDataResponse) Reset() {
	*x = DescribeVodSnapshotDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSnapshotDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSnapshotDataResponse) ProtoMessage() {}

func (x *DescribeVodSnapshotDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSnapshotDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSnapshotDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{83}
}

func (x *DescribeVodSnapshotDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSnapshotDataResponse) GetResult() *business.DescribeVodSnapshotDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 工作流明细用量
type DescribeVodSpaceWorkflowDetailDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceWorkflowDetailDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) Reset() {
	*x = DescribeVodSpaceWorkflowDetailDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceWorkflowDetailDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceWorkflowDetailDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceWorkflowDetailDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{84}
}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) GetResult() *business.DescribeVodSpaceWorkflowDetailDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播编辑明细用量
type DescribeVodSpaceEditDetailDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceEditDetailDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceEditDetailDataResponse) Reset() {
	*x = DescribeVodSpaceEditDetailDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditDetailDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditDetailDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceEditDetailDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditDetailDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditDetailDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{85}
}

func (x *DescribeVodSpaceEditDetailDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceEditDetailDataResponse) GetResult() *business.DescribeVodSpaceEditDetailDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播文件域名粒度播放统计信息下载
type DescribeVodPlayFileLogByDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodPlayFileLogByDomainResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodPlayFileLogByDomainResponse) Reset() {
	*x = DescribeVodPlayFileLogByDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodPlayFileLogByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodPlayFileLogByDomainResponse) ProtoMessage() {}

func (x *DescribeVodPlayFileLogByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodPlayFileLogByDomainResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodPlayFileLogByDomainResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{86}
}

func (x *DescribeVodPlayFileLogByDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodPlayFileLogByDomainResponse) GetResult() *business.DescribeVodPlayFileLogByDomainResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 存储用量小时延迟数据-定制化
type DescribeVodSpaceStorageDataFDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceStorageDataFDResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceStorageDataFDResponse) Reset() {
	*x = DescribeVodSpaceStorageDataFDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceStorageDataFDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceStorageDataFDResponse) ProtoMessage() {}

func (x *DescribeVodSpaceStorageDataFDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceStorageDataFDResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceStorageDataFDResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{87}
}

func (x *DescribeVodSpaceStorageDataFDResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceStorageDataFDResponse) GetResult() *business.DescribeVodSpaceStorageDataFDResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播截图用量
type DescribeVodEnhanceImageDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodEnhanceImageDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodEnhanceImageDataResponse) Reset() {
	*x = DescribeVodEnhanceImageDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodEnhanceImageDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodEnhanceImageDataResponse) ProtoMessage() {}

func (x *DescribeVodEnhanceImageDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodEnhanceImageDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodEnhanceImageDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{88}
}

func (x *DescribeVodEnhanceImageDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodEnhanceImageDataResponse) GetResult() *business.DescribeVodEnhanceImageDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 查询视频播放信息
type DescribeVodPlayedStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodPlayedStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodPlayedStatisDataResponse) Reset() {
	*x = DescribeVodPlayedStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodPlayedStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodPlayedStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodPlayedStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodPlayedStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodPlayedStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{89}
}

func (x *DescribeVodPlayedStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodPlayedStatisDataResponse) GetResult() *business.DescribeVodPlayedStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 查询播放 TopN 的视频
type DescribeVodMostPlayedStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodMostPlayedStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodMostPlayedStatisDataResponse) Reset() {
	*x = DescribeVodMostPlayedStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodMostPlayedStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodMostPlayedStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodMostPlayedStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodMostPlayedStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodMostPlayedStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{90}
}

func (x *DescribeVodMostPlayedStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodMostPlayedStatisDataResponse) GetResult() *business.DescribeVodMostPlayedStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播实时处理用量
type DescribeVodRealtimeMediaDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodRealtimeMediaDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodRealtimeMediaDataResponse) Reset() {
	*x = DescribeVodRealtimeMediaDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodRealtimeMediaDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodRealtimeMediaDataResponse) ProtoMessage() {}

func (x *DescribeVodRealtimeMediaDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodRealtimeMediaDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodRealtimeMediaDataResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{91}
}

func (x *DescribeVodRealtimeMediaDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodRealtimeMediaDataResponse) GetResult() *business.DescribeVodRealtimeMediaDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 媒资封禁相关
type VodSubmitBlockMediaTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodSubmitBlockMediaTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSubmitBlockMediaTaskResponse) Reset() {
	*x = VodSubmitBlockMediaTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitBlockMediaTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitBlockMediaTaskResponse) ProtoMessage() {}

func (x *VodSubmitBlockMediaTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitBlockMediaTaskResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitBlockMediaTaskResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{92}
}

func (x *VodSubmitBlockMediaTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitBlockMediaTaskResponse) GetResult() *business.VodSubmitBlockMediaTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSubmitUnblockMediaTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodSubmitUnblockMediaTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSubmitUnblockMediaTaskResponse) Reset() {
	*x = VodSubmitUnblockMediaTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitUnblockMediaTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitUnblockMediaTaskResponse) ProtoMessage() {}

func (x *VodSubmitUnblockMediaTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitUnblockMediaTaskResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitUnblockMediaTaskResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{93}
}

func (x *VodSubmitUnblockMediaTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitUnblockMediaTaskResponse) GetResult() *business.VodSubmitUnblockMediaTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodQueryMediaBlockStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodQueryMediaBlockStatusResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodQueryMediaBlockStatusResponse) Reset() {
	*x = VodQueryMediaBlockStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryMediaBlockStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryMediaBlockStatusResponse) ProtoMessage() {}

func (x *VodQueryMediaBlockStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryMediaBlockStatusResponse.ProtoReflect.Descriptor instead.
func (*VodQueryMediaBlockStatusResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{94}
}

func (x *VodQueryMediaBlockStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodQueryMediaBlockStatusResponse) GetResult() *business.VodQueryMediaBlockStatusResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 播放列表
// **********************************************************************
type VodCreatePlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodCreatePlaylistResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodCreatePlaylistResponse) Reset() {
	*x = VodCreatePlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreatePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreatePlaylistResponse) ProtoMessage() {}

func (x *VodCreatePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreatePlaylistResponse.ProtoReflect.Descriptor instead.
func (*VodCreatePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{95}
}

func (x *VodCreatePlaylistResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreatePlaylistResponse) GetResult() *business.VodCreatePlaylistResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetPlaylistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodGetPlaylistsResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetPlaylistsResponse) Reset() {
	*x = VodGetPlaylistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlaylistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlaylistsResponse) ProtoMessage() {}

func (x *VodGetPlaylistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlaylistsResponse.ProtoReflect.Descriptor instead.
func (*VodGetPlaylistsResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{96}
}

func (x *VodGetPlaylistsResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetPlaylistsResponse) GetResult() *business.VodGetPlaylistsResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdatePlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodUpdatePlaylistResponse) Reset() {
	*x = VodUpdatePlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdatePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdatePlaylistResponse) ProtoMessage() {}

func (x *VodUpdatePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdatePlaylistResponse.ProtoReflect.Descriptor instead.
func (*VodUpdatePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{97}
}

func (x *VodUpdatePlaylistResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeletePlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodDeletePlaylistResponse) Reset() {
	*x = VodDeletePlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeletePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeletePlaylistResponse) ProtoMessage() {}

func (x *VodDeletePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeletePlaylistResponse.ProtoReflect.Descriptor instead.
func (*VodDeletePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{98}
}

func (x *VodDeletePlaylistResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

// **********************************************************************
// 商业DRM
// **********************************************************************
type VodGetIntertrustApiKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodGetIntertrustApiKeyResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetIntertrustApiKeyResponse) Reset() {
	*x = VodGetIntertrustApiKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetIntertrustApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetIntertrustApiKeyResponse) ProtoMessage() {}

func (x *VodGetIntertrustApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetIntertrustApiKeyResponse.ProtoReflect.Descriptor instead.
func (*VodGetIntertrustApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{99}
}

func (x *VodGetIntertrustApiKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetIntertrustApiKeyResponse) GetResult() *business.VodGetIntertrustApiKeyResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSetIntertrustApiKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodSetIntertrustApiKeyResponse) Reset() {
	*x = VodSetIntertrustApiKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSetIntertrustApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSetIntertrustApiKeyResponse) ProtoMessage() {}

func (x *VodSetIntertrustApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSetIntertrustApiKeyResponse.ProtoReflect.Descriptor instead.
func (*VodSetIntertrustApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{100}
}

func (x *VodSetIntertrustApiKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteIntertrustApiKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodDeleteIntertrustApiKeyResponse) Reset() {
	*x = VodDeleteIntertrustApiKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteIntertrustApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteIntertrustApiKeyResponse) ProtoMessage() {}

func (x *VodDeleteIntertrustApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteIntertrustApiKeyResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteIntertrustApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{101}
}

func (x *VodDeleteIntertrustApiKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetFairPlayCertInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodGetFairPlayCertInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetFairPlayCertInfoResponse) Reset() {
	*x = VodGetFairPlayCertInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetFairPlayCertInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetFairPlayCertInfoResponse) ProtoMessage() {}

func (x *VodGetFairPlayCertInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetFairPlayCertInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetFairPlayCertInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{102}
}

func (x *VodGetFairPlayCertInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetFairPlayCertInfoResponse) GetResult() *business.VodGetFairPlayCertInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSetFairPlayCertInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodSetFairPlayCertInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSetFairPlayCertInfoResponse) Reset() {
	*x = VodSetFairPlayCertInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSetFairPlayCertInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSetFairPlayCertInfoResponse) ProtoMessage() {}

func (x *VodSetFairPlayCertInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSetFairPlayCertInfoResponse.ProtoReflect.Descriptor instead.
func (*VodSetFairPlayCertInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{103}
}

func (x *VodSetFairPlayCertInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSetFairPlayCertInfoResponse) GetResult() *business.VodSetFairPlayCertInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteFairPlayCertInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodDeleteFairPlayCertInfoResponse) Reset() {
	*x = VodDeleteFairPlayCertInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteFairPlayCertInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteFairPlayCertInfoResponse) ProtoMessage() {}

func (x *VodDeleteFairPlayCertInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteFairPlayCertInfoResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteFairPlayCertInfoResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{104}
}

func (x *VodDeleteFairPlayCertInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetFairPlayCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodGetFairPlayCertResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetFairPlayCertResponse) Reset() {
	*x = VodGetFairPlayCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetFairPlayCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetFairPlayCertResponse) ProtoMessage() {}

func (x *VodGetFairPlayCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetFairPlayCertResponse.ProtoReflect.Descriptor instead.
func (*VodGetFairPlayCertResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{105}
}

func (x *VodGetFairPlayCertResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetFairPlayCertResponse) GetResult() *business.VodGetFairPlayCertResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetDrmLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodDrmLicenseResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetDrmLicenseResponse) Reset() {
	*x = VodGetDrmLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetDrmLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetDrmLicenseResponse) ProtoMessage() {}

func (x *VodGetDrmLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetDrmLicenseResponse.ProtoReflect.Descriptor instead.
func (*VodGetDrmLicenseResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{106}
}

func (x *VodGetDrmLicenseResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetDrmLicenseResponse) GetResult() *business.VodDrmLicenseResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 镜像回源
// **********************************************************************
type VodSetMirrorSrcRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodSetMirrorSrcRuleResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSetMirrorSrcRuleResponse) Reset() {
	*x = VodSetMirrorSrcRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSetMirrorSrcRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSetMirrorSrcRuleResponse) ProtoMessage() {}

func (x *VodSetMirrorSrcRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSetMirrorSrcRuleResponse.ProtoReflect.Descriptor instead.
func (*VodSetMirrorSrcRuleResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{107}
}

func (x *VodSetMirrorSrcRuleResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSetMirrorSrcRuleResponse) GetResult() *business.VodSetMirrorSrcRuleResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteMirrorSrcRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodDeleteMirrorSrcRuleResponse) Reset() {
	*x = VodDeleteMirrorSrcRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteMirrorSrcRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteMirrorSrcRuleResponse) ProtoMessage() {}

func (x *VodDeleteMirrorSrcRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteMirrorSrcRuleResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteMirrorSrcRuleResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{108}
}

func (x *VodDeleteMirrorSrcRuleResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodListMirrorSrcRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodListMirrorSrcRuleResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodListMirrorSrcRuleResponse) Reset() {
	*x = VodListMirrorSrcRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListMirrorSrcRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListMirrorSrcRuleResponse) ProtoMessage() {}

func (x *VodListMirrorSrcRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListMirrorSrcRuleResponse.ProtoReflect.Descriptor instead.
func (*VodListMirrorSrcRuleResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{109}
}

func (x *VodListMirrorSrcRuleResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListMirrorSrcRuleResponse) GetResult() *business.VodListMirrorSrcRuleResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 项目管理
// **********************************************************************
type VodListProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodListProjectsResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodListProjectsResponse) Reset() {
	*x = VodListProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListProjectsResponse) ProtoMessage() {}

func (x *VodListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_byteplus_vod_response_response_vod_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListProjectsResponse.ProtoReflect.Descriptor instead.
func (*VodListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_byteplus_vod_response_response_vod_proto_rawDescGZIP(), []int{110}
}

func (x *VodListProjectsResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListProjectsResponse) GetResult() *business.VodListProjectsResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_byteplus_vod_response_response_vod_proto protoreflect.FileDescriptor

var file_byteplus_vod_response_response_vod_proto_rawDesc = []byte{
	0x0a, 0x28, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x76, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x18, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x6f, 0x64,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f,
	0x76, 0x6f, 0x64, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x26, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x65, 0x64, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27,
	0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x63, 0x64, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x62, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f,
	0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f,
	0x61, 0x70, 0x70, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x27, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x2f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x19, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x4a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb9, 0x01,
	0x0a, 0x16, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x46, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x1e, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x20, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x72, 0x6d, 0x50, 0x6c,
	0x61, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x44, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01,
	0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x48,
	0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01,
	0x0a, 0x21, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6c, 0x73, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x2c, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x60, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x4c,
	0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xb6, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x56, 0x6f, 0x64,
	0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc7, 0x01, 0x0a,
	0x1b, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x75, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc5, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7e, 0x0a, 0x23, 0x56, 0x6f, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd3, 0x01, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbb, 0x01,
	0x0a, 0x16, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x48, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x1b,
	0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x50, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xcd, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x78, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xce, 0x01, 0x0a, 0x21,
	0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcb, 0x01, 0x0a,
	0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x4c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x22, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74,
	0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x53, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f,
	0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x30, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x64, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x63, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x29, 0x56, 0x6f, 0x64,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x5d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd7,
	0x01, 0x0a, 0x24, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x56, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7f, 0x0a, 0x24, 0x56, 0x6f, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a, 0x24, 0x56, 0x6f, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd1, 0x01, 0x0a, 0x23, 0x56,
	0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xba,
	0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x16,
	0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x4a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7a, 0x0a, 0x1f, 0x56,
	0x6f, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65,
	0x74, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x22,
	0x56, 0x6f, 0x64, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x20, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x25, 0x56, 0x6f, 0x64, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x25, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xc0, 0x01, 0x0a, 0x1c, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x24, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x45, 0x64, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc8, 0x01, 0x0a,
	0x20, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x71,
	0x0a, 0x16, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x42,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x71, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7d, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xdd, 0x01, 0x0a, 0x26, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x71, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x70, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x53, 0x74,
	0x6f, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x1f, 0x56, 0x6f, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x41, 0x64, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x7f, 0x0a, 0x24, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xbb, 0x01, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xc8, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64,
	0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x1f,
	0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64, 0x6e, 0x50, 0x72, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x64,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x64, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01,
	0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x54, 0x6f, 0x70, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x64, 0x6e, 0x54, 0x6f, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc7, 0x01,
	0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x54, 0x6f, 0x70, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e,
	0x54, 0x6f, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x29, 0x56, 0x6f, 0x64, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5d,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01,
	0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x43, 0x64, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x64, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01,
	0x0a, 0x21, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x64, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x19,
	0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x50, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x42, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x27, 0x56, 0x6f, 0x64, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5b, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x64,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x53, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x74, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x1f, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x23, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x7d, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x41, 0x64, 0x64, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x76, 0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdf, 0x01, 0x0a, 0x27, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x5b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbb, 0x01, 0x0a,
	0x15, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x25, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x2a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe1, 0x01, 0x0a,
	0x28, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x5c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xcf, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x2a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x26, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45,
	0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5a,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x26, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5a,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x25, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x44, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x6f, 0x64, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdf, 0x01, 0x0a,
	0x27, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x4d, 0x6f, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x5b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x4d, 0x6f, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd9,
	0x01, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x58, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x1f, 0x56,
	0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01, 0x0a,
	0x21, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x20, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01, 0x0a,
	0x17, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x74,
	0x0a, 0x19, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x74, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x1e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x72, 0x75, 0x73, 0x74, 0x41,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x74, 0x72, 0x75, 0x73, 0x74, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a, 0x1e, 0x56, 0x6f,
	0x64, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x72, 0x75, 0x73, 0x74, 0x41, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x21, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x72, 0x75, 0x73, 0x74, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x52, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x46, 0x61, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x65, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x46, 0x61,
	0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x52, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x53, 0x65, 0x74, 0x46, 0x61, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x65, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x7c, 0x0a, 0x21, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x61, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xc5, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x46, 0x61, 0x69, 0x72,
	0x50, 0x6c, 0x61, 0x79, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x46,
	0x61, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x44, 0x72, 0x6d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x44, 0x72, 0x6d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x1b, 0x56,
	0x6f, 0x64, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x72, 0x63, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x53,
	0x72, 0x63, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x72, 0x63, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc9, 0x01, 0x0a, 0x1c, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f,
	0x72, 0x53, 0x72, 0x63, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x72, 0x63, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x17,
	0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0xd8, 0x01,
	0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x56, 0x6f, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67,
	0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f,
	0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xca, 0x02, 0x24, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xe2, 0x02,
	0x27, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_byteplus_vod_response_response_vod_proto_rawDescOnce sync.Once
	file_byteplus_vod_response_response_vod_proto_rawDescData = file_byteplus_vod_response_response_vod_proto_rawDesc
)

func file_byteplus_vod_response_response_vod_proto_rawDescGZIP() []byte {
	file_byteplus_vod_response_response_vod_proto_rawDescOnce.Do(func() {
		file_byteplus_vod_response_response_vod_proto_rawDescData = protoimpl.X.CompressGZIP(file_byteplus_vod_response_response_vod_proto_rawDescData)
	})
	return file_byteplus_vod_response_response_vod_proto_rawDescData
}

var file_byteplus_vod_response_response_vod_proto_msgTypes = make([]protoimpl.MessageInfo, 111)
var file_byteplus_vod_response_response_vod_proto_goTypes = []interface{}{
	(*VodGetAllPlayInfoResponse)(nil),                               // 0: Byteplus.Vod.Models.Response.VodGetAllPlayInfoResponse
	(*VodGetPlayInfoResponse)(nil),                                  // 1: Byteplus.Vod.Models.Response.VodGetPlayInfoResponse
	(*VodGetOriginalPlayInfoResponse)(nil),                          // 2: Byteplus.Vod.Models.Response.VodGetOriginalPlayInfoResponse
	(*VodGetPrivateDrmPlayAuthResponse)(nil),                        // 3: Byteplus.Vod.Models.Response.VodGetPrivateDrmPlayAuthResponse
	(*VodGetHlsDecryptionKeyResponse)(nil),                          // 4: Byteplus.Vod.Models.Response.VodGetHlsDecryptionKeyResponse
	(*VodCreateHlsDecryptionKeyResponse)(nil),                       // 5: Byteplus.Vod.Models.Response.VodCreateHlsDecryptionKeyResponse
	(*VodGetPlayInfoWithLiveTimeShiftSceneResponse)(nil),            // 6: Byteplus.Vod.Models.Response.VodGetPlayInfoWithLiveTimeShiftSceneResponse
	(*VodUploadMediaResponse)(nil),                                  // 7: Byteplus.Vod.Models.Response.VodUploadMediaResponse
	(*VodQueryUploadTaskInfoResponse)(nil),                          // 8: Byteplus.Vod.Models.Response.VodQueryUploadTaskInfoResponse
	(*VodUrlUploadResponse)(nil),                                    // 9: Byteplus.Vod.Models.Response.VodUrlUploadResponse
	(*VodApplyUploadInfoResponse)(nil),                              // 10: Byteplus.Vod.Models.Response.VodApplyUploadInfoResponse
	(*VodCommitUploadInfoResponse)(nil),                             // 11: Byteplus.Vod.Models.Response.VodCommitUploadInfoResponse
	(*VodGetMediaInfosResponse)(nil),                                // 12: Byteplus.Vod.Models.Response.VodGetMediaInfosResponse
	(*VodUpdateMediaInfoResponse)(nil),                              // 13: Byteplus.Vod.Models.Response.VodUpdateMediaInfoResponse
	(*VodGetRecommendedPosterResponse)(nil),                         // 14: Byteplus.Vod.Models.Response.VodGetRecommendedPosterResponse
	(*VodUpdateMediaPublishStatusResponse)(nil),                     // 15: Byteplus.Vod.Models.Response.VodUpdateMediaPublishStatusResponse
	(*VodUpdateMediaStorageClassResponse)(nil),                      // 16: Byteplus.Vod.Models.Response.VodUpdateMediaStorageClassResponse
	(*VodDeleteMediaResponse)(nil),                                  // 17: Byteplus.Vod.Models.Response.VodDeleteMediaResponse
	(*VodDeleteTranscodesResponse)(nil),                             // 18: Byteplus.Vod.Models.Response.VodDeleteTranscodesResponse
	(*VodGetMediaListResponse)(nil),                                 // 19: Byteplus.Vod.Models.Response.VodGetMediaListResponse
	(*VodGetSubtitleInfoListResponse)(nil),                          // 20: Byteplus.Vod.Models.Response.VodGetSubtitleInfoListResponse
	(*VodUpdateSubtitleStatusResponse)(nil),                         // 21: Byteplus.Vod.Models.Response.VodUpdateSubtitleStatusResponse
	(*VodUpdateSubtitleInfoResponse)(nil),                           // 22: Byteplus.Vod.Models.Response.VodUpdateSubtitleInfoResponse
	(*VodGetAuditFramesForAuditResponse)(nil),                       // 23: Byteplus.Vod.Models.Response.VodGetAuditFramesForAuditResponse
	(*VodGetMLFramesForAuditResponse)(nil),                          // 24: Byteplus.Vod.Models.Response.VodGetMLFramesForAuditResponse
	(*VodGetBetterFramesForAuditResponse)(nil),                      // 25: Byteplus.Vod.Models.Response.VodGetBetterFramesForAuditResponse
	(*VodGetAudioInfoForAuditResponse)(nil),                         // 26: Byteplus.Vod.Models.Response.VodGetAudioInfoForAuditResponse
	(*VodGetAutomaticSpeechRecognitionForAuditResponse)(nil),        // 27: Byteplus.Vod.Models.Response.VodGetAutomaticSpeechRecognitionForAuditResponse
	(*VodGetAudioEventDetectionForAuditResponse)(nil),               // 28: Byteplus.Vod.Models.Response.VodGetAudioEventDetectionForAuditResponse
	(*VodCreateVideoClassificationResponse)(nil),                    // 29: Byteplus.Vod.Models.Response.VodCreateVideoClassificationResponse
	(*VodUpdateVideoClassificationResponse)(nil),                    // 30: Byteplus.Vod.Models.Response.VodUpdateVideoClassificationResponse
	(*VodDeleteVideoClassificationResponse)(nil),                    // 31: Byteplus.Vod.Models.Response.VodDeleteVideoClassificationResponse
	(*VodListVideoClassificationsResponse)(nil),                     // 32: Byteplus.Vod.Models.Response.VodListVideoClassificationsResponse
	(*VodListSnapshotsResponse)(nil),                                // 33: Byteplus.Vod.Models.Response.VodListSnapshotsResponse
	(*VodGetFileListResponse)(nil),                                  // 34: Byteplus.Vod.Models.Response.VodGetFileListResponse
	(*VodExtractMediaMetaTaskResponse)(nil),                         // 35: Byteplus.Vod.Models.Response.VodExtractMediaMetaTaskResponse
	(*VodStartWorkflowResponse)(nil),                                // 36: Byteplus.Vod.Models.Response.VodStartWorkflowResponse
	(*VodRetrieveTranscodeResultResponse)(nil),                      // 37: Byteplus.Vod.Models.Response.VodRetrieveTranscodeResultResponse
	(*VodListWorkflowExecutionResponse)(nil),                        // 38: Byteplus.Vod.Models.Response.VodListWorkflowExecutionResponse
	(*VodGetWorkflowExecutionDetailResponse)(nil),                   // 39: Byteplus.Vod.Models.Response.VodGetWorkflowExecutionDetailResponse
	(*VodGetWorkflowExecutionStatusResponse)(nil),                   // 40: Byteplus.Vod.Models.Response.VodGetWorkflowExecutionStatusResponse
	(*VodGetWorkflowResultResponse)(nil),                            // 41: Byteplus.Vod.Models.Response.VodGetWorkflowResultResponse
	(*VodSubmitDirectEditTaskAsyncResponse)(nil),                    // 42: Byteplus.Vod.Models.Response.VodSubmitDirectEditTaskAsyncResponse
	(*VodGetDirectEditProgressResponse)(nil),                        // 43: Byteplus.Vod.Models.Response.VodGetDirectEditProgressResponse
	(*VodGetDirectEditResultResponse)(nil),                          // 44: Byteplus.Vod.Models.Response.VodGetDirectEditResultResponse
	(*VodCreateSpaceResponse)(nil),                                  // 45: Byteplus.Vod.Models.Response.VodCreateSpaceResponse
	(*VodListSpaceResponse)(nil),                                    // 46: Byteplus.Vod.Models.Response.VodListSpaceResponse
	(*VodGetSpaceDetailResponse)(nil),                               // 47: Byteplus.Vod.Models.Response.VodGetSpaceDetailResponse
	(*VodUpdateSpaceResponse)(nil),                                  // 48: Byteplus.Vod.Models.Response.VodUpdateSpaceResponse
	(*VodUpdateSpaceUploadConfigResponse)(nil),                      // 49: Byteplus.Vod.Models.Response.VodUpdateSpaceUploadConfigResponse
	(*VodDescribeVodSpaceStorageDataResponse)(nil),                  // 50: Byteplus.Vod.Models.Response.VodDescribeVodSpaceStorageDataResponse
	(*VodStartDomainResponse)(nil),                                  // 51: Byteplus.Vod.Models.Response.VodStartDomainResponse
	(*VodStopDomainResponse)(nil),                                   // 52: Byteplus.Vod.Models.Response.VodStopDomainResponse
	(*VodUpdateDomainPlayRuleResponse)(nil),                         // 53: Byteplus.Vod.Models.Response.VodUpdateDomainPlayRuleResponse
	(*VodAddDomainToSchedulerResponse)(nil),                         // 54: Byteplus.Vod.Models.Response.VodAddDomainToSchedulerResponse
	(*VodRemoveDomainFromSchedulerResponse)(nil),                    // 55: Byteplus.Vod.Models.Response.VodRemoveDomainFromSchedulerResponse
	(*VodListDomainResponse)(nil),                                   // 56: Byteplus.Vod.Models.Response.VodListDomainResponse
	(*VodCreateCdnRefreshTaskResponse)(nil),                         // 57: Byteplus.Vod.Models.Response.VodCreateCdnRefreshTaskResponse
	(*VodCreateCdnPreloadTaskResponse)(nil),                         // 58: Byteplus.Vod.Models.Response.VodCreateCdnPreloadTaskResponse
	(*VodListCdnTasksResponse)(nil),                                 // 59: Byteplus.Vod.Models.Response.VodListCdnTasksResponse
	(*VodListCdnAccessLogResponse)(nil),                             // 60: Byteplus.Vod.Models.Response.VodListCdnAccessLogResponse
	(*VodListCdnTopAccessUrlResponse)(nil),                          // 61: Byteplus.Vod.Models.Response.VodListCdnTopAccessUrlResponse
	(*VodListCdnTopAccessResponse)(nil),                             // 62: Byteplus.Vod.Models.Response.VodListCdnTopAccessResponse
	(*VodDescribeVodDomainBandwidthDataResponse)(nil),               // 63: Byteplus.Vod.Models.Response.VodDescribeVodDomainBandwidthDataResponse
	(*VodCdnStatisticsCommonResponse)(nil),                          // 64: Byteplus.Vod.Models.Response.VodCdnStatisticsCommonResponse
	(*VodListCdnUsageDataDetailResponse)(nil),                       // 65: Byteplus.Vod.Models.Response.VodListCdnUsageDataDetailResponse
	(*VodListCdnStatusDataDetailResponse)(nil),                      // 66: Byteplus.Vod.Models.Response.VodListCdnStatusDataDetailResponse
	(*VodDescribeIPInfoResponse)(nil),                               // 67: Byteplus.Vod.Models.Response.VodDescribeIPInfoResponse
	(*VodDescribeVodDomainTrafficDataResponse)(nil),                 // 68: Byteplus.Vod.Models.Response.VodDescribeVodDomainTrafficDataResponse
	(*VodSubmitBlockTasksResponse)(nil),                             // 69: Byteplus.Vod.Models.Response.VodSubmitBlockTasksResponse
	(*VodGetContentBlockTasksResponse)(nil),                         // 70: Byteplus.Vod.Models.Response.VodGetContentBlockTasksResponse
	(*VodCreateDomainV2Response)(nil),                               // 71: Byteplus.Vod.Models.Response.VodCreateDomainV2Response
	(*VodUpdateDomainExpireV2Response)(nil),                         // 72: Byteplus.Vod.Models.Response.VodUpdateDomainExpireV2Response
	(*VodUpdateDomainAuthConfigV2Response)(nil),                     // 73: Byteplus.Vod.Models.Response.VodUpdateDomainAuthConfigV2Response
	(*AddOrUpdateCertificateV2Response)(nil),                        // 74: Byteplus.Vod.Models.Response.AddOrUpdateCertificateV2Response
	(*VodAddCallbackSubscriptionResponse)(nil),                      // 75: Byteplus.Vod.Models.Response.VodAddCallbackSubscriptionResponse
	(*VodSetCallbackEventResponse)(nil),                             // 76: Byteplus.Vod.Models.Response.VodSetCallbackEventResponse
	(*VodGetSmartStrategyLitePlayInfoResponse)(nil),                 // 77: Byteplus.Vod.Models.Response.VodGetSmartStrategyLitePlayInfoResponse
	(*VodGetAppInfoResponse)(nil),                                   // 78: Byteplus.Vod.Models.Response.VodGetAppInfoResponse
	(*DescribeVodSpaceTranscodeDataResponse)(nil),                   // 79: Byteplus.Vod.Models.Response.DescribeVodSpaceTranscodeDataResponse
	(*DescribeVodSpaceAIStatisDataResponse)(nil),                    // 80: Byteplus.Vod.Models.Response.DescribeVodSpaceAIStatisDataResponse
	(*DescribeVodSpaceSubtitleStatisDataResponse)(nil),              // 81: Byteplus.Vod.Models.Response.DescribeVodSpaceSubtitleStatisDataResponse
	(*DescribeVodSpaceDetectStatisDataResponse)(nil),                // 82: Byteplus.Vod.Models.Response.DescribeVodSpaceDetectStatisDataResponse
	(*DescribeVodSnapshotDataResponse)(nil),                         // 83: Byteplus.Vod.Models.Response.DescribeVodSnapshotDataResponse
	(*DescribeVodSpaceWorkflowDetailDataResponse)(nil),              // 84: Byteplus.Vod.Models.Response.DescribeVodSpaceWorkflowDetailDataResponse
	(*DescribeVodSpaceEditDetailDataResponse)(nil),                  // 85: Byteplus.Vod.Models.Response.DescribeVodSpaceEditDetailDataResponse
	(*DescribeVodPlayFileLogByDomainResponse)(nil),                  // 86: Byteplus.Vod.Models.Response.DescribeVodPlayFileLogByDomainResponse
	(*DescribeVodSpaceStorageDataFDResponse)(nil),                   // 87: Byteplus.Vod.Models.Response.DescribeVodSpaceStorageDataFDResponse
	(*DescribeVodEnhanceImageDataResponse)(nil),                     // 88: Byteplus.Vod.Models.Response.DescribeVodEnhanceImageDataResponse
	(*DescribeVodPlayedStatisDataResponse)(nil),                     // 89: Byteplus.Vod.Models.Response.DescribeVodPlayedStatisDataResponse
	(*DescribeVodMostPlayedStatisDataResponse)(nil),                 // 90: Byteplus.Vod.Models.Response.DescribeVodMostPlayedStatisDataResponse
	(*DescribeVodRealtimeMediaDataResponse)(nil),                    // 91: Byteplus.Vod.Models.Response.DescribeVodRealtimeMediaDataResponse
	(*VodSubmitBlockMediaTaskResponse)(nil),                         // 92: Byteplus.Vod.Models.Response.VodSubmitBlockMediaTaskResponse
	(*VodSubmitUnblockMediaTaskResponse)(nil),                       // 93: Byteplus.Vod.Models.Response.VodSubmitUnblockMediaTaskResponse
	(*VodQueryMediaBlockStatusResponse)(nil),                        // 94: Byteplus.Vod.Models.Response.VodQueryMediaBlockStatusResponse
	(*VodCreatePlaylistResponse)(nil),                               // 95: Byteplus.Vod.Models.Response.VodCreatePlaylistResponse
	(*VodGetPlaylistsResponse)(nil),                                 // 96: Byteplus.Vod.Models.Response.VodGetPlaylistsResponse
	(*VodUpdatePlaylistResponse)(nil),                               // 97: Byteplus.Vod.Models.Response.VodUpdatePlaylistResponse
	(*VodDeletePlaylistResponse)(nil),                               // 98: Byteplus.Vod.Models.Response.VodDeletePlaylistResponse
	(*VodGetIntertrustApiKeyResponse)(nil),                          // 99: Byteplus.Vod.Models.Response.VodGetIntertrustApiKeyResponse
	(*VodSetIntertrustApiKeyResponse)(nil),                          // 100: Byteplus.Vod.Models.Response.VodSetIntertrustApiKeyResponse
	(*VodDeleteIntertrustApiKeyResponse)(nil),                       // 101: Byteplus.Vod.Models.Response.VodDeleteIntertrustApiKeyResponse
	(*VodGetFairPlayCertInfoResponse)(nil),                          // 102: Byteplus.Vod.Models.Response.VodGetFairPlayCertInfoResponse
	(*VodSetFairPlayCertInfoResponse)(nil),                          // 103: Byteplus.Vod.Models.Response.VodSetFairPlayCertInfoResponse
	(*VodDeleteFairPlayCertInfoResponse)(nil),                       // 104: Byteplus.Vod.Models.Response.VodDeleteFairPlayCertInfoResponse
	(*VodGetFairPlayCertResponse)(nil),                              // 105: Byteplus.Vod.Models.Response.VodGetFairPlayCertResponse
	(*VodGetDrmLicenseResponse)(nil),                                // 106: Byteplus.Vod.Models.Response.VodGetDrmLicenseResponse
	(*VodSetMirrorSrcRuleResponse)(nil),                             // 107: Byteplus.Vod.Models.Response.VodSetMirrorSrcRuleResponse
	(*VodDeleteMirrorSrcRuleResponse)(nil),                          // 108: Byteplus.Vod.Models.Response.VodDeleteMirrorSrcRuleResponse
	(*VodListMirrorSrcRuleResponse)(nil),                            // 109: Byteplus.Vod.Models.Response.VodListMirrorSrcRuleResponse
	(*VodListProjectsResponse)(nil),                                 // 110: Byteplus.Vod.Models.Response.VodListProjectsResponse
	(*base.ResponseMetadata)(nil),                                   // 111: Byteplus.Base.Models.Base.ResponseMetadata
	(*business.VodAllPlayInfoResult)(nil),                           // 112: Byteplus.Vod.Models.Business.VodAllPlayInfoResult
	(*business.VodPlayInfoModel)(nil),                               // 113: Byteplus.Vod.Models.Business.VodPlayInfoModel
	(*business.VodGetOriginalPlayInfoResult)(nil),                   // 114: Byteplus.Vod.Models.Business.VodGetOriginalPlayInfoResult
	(*business.VodGetPrivateDrmPlayAuthResult)(nil),                 // 115: Byteplus.Vod.Models.Business.VodGetPrivateDrmPlayAuthResult
	(*business.VodGetHlsDecryptionKeyResult)(nil),                   // 116: Byteplus.Vod.Models.Business.VodGetHlsDecryptionKeyResult
	(*business.VodCreateHlsDecryptionKeyResult)(nil),                // 117: Byteplus.Vod.Models.Business.VodCreateHlsDecryptionKeyResult
	(*business.VodGetPlayInfoWithLiveTimeShiftSceneResult)(nil),     // 118: Byteplus.Vod.Models.Business.VodGetPlayInfoWithLiveTimeShiftSceneResult
	(*business.VodCommitData)(nil),                                  // 119: Byteplus.Vod.Models.Business.VodCommitData
	(*business.VodQueryData)(nil),                                   // 120: Byteplus.Vod.Models.Business.VodQueryData
	(*business.VodUrlResponseData)(nil),                             // 121: Byteplus.Vod.Models.Business.VodUrlResponseData
	(*business.VodApplyUploadInfoResult)(nil),                       // 122: Byteplus.Vod.Models.Business.VodApplyUploadInfoResult
	(*business.VodCommitUploadInfoResult)(nil),                      // 123: Byteplus.Vod.Models.Business.VodCommitUploadInfoResult
	(*business.VodGetMediaInfosData)(nil),                           // 124: Byteplus.Vod.Models.Business.VodGetMediaInfosData
	(*business.VodGetRecPosterData)(nil),                            // 125: Byteplus.Vod.Models.Business.VodGetRecPosterData
	(*business.VodUpdateMediaStorageClassData)(nil),                 // 126: Byteplus.Vod.Models.Business.VodUpdateMediaStorageClassData
	(*business.VodDeleteMediaData)(nil),                             // 127: Byteplus.Vod.Models.Business.VodDeleteMediaData
	(*business.VodDeleteTranscodesData)(nil),                        // 128: Byteplus.Vod.Models.Business.VodDeleteTranscodesData
	(*business.VodGetMediaListData)(nil),                            // 129: Byteplus.Vod.Models.Business.VodGetMediaListData
	(*business.VodGetSubtitleInfoListData)(nil),                     // 130: Byteplus.Vod.Models.Business.VodGetSubtitleInfoListData
	(*business.VodUpdateSubtitleStatusData)(nil),                    // 131: Byteplus.Vod.Models.Business.VodUpdateSubtitleStatusData
	(*business.VodGetFramesForAuditResult)(nil),                     // 132: Byteplus.Vod.Models.Business.VodGetFramesForAuditResult
	(*business.VodGetBetterFramesForAuditResult)(nil),               // 133: Byteplus.Vod.Models.Business.VodGetBetterFramesForAuditResult
	(*business.VodGetAudioInfoForAuditResult)(nil),                  // 134: Byteplus.Vod.Models.Business.VodGetAudioInfoForAuditResult
	(*business.VodGetAutomaticSpeechRecognitionForAuditResult)(nil), // 135: Byteplus.Vod.Models.Business.VodGetAutomaticSpeechRecognitionForAuditResult
	(*business.VodGetAudioEventDetectionForAuditResult)(nil),        // 136: Byteplus.Vod.Models.Business.VodGetAudioEventDetectionForAuditResult
	(*business.VodCreateVideoClassificationData)(nil),               // 137: Byteplus.Vod.Models.Business.VodCreateVideoClassificationData
	(*business.VodVideoClassificationsData)(nil),                    // 138: Byteplus.Vod.Models.Business.VodVideoClassificationsData
	(*business.VodSnapshotData)(nil),                                // 139: Byteplus.Vod.Models.Business.VodSnapshotData
	(*business.VodStartWorkflowResult)(nil),                         // 140: Byteplus.Vod.Models.Business.VodStartWorkflowResult
	(*business.TranscodeResult)(nil),                                // 141: Byteplus.Vod.Models.Business.TranscodeResult
	(*business.VodListWorkflowExecutionResult)(nil),                 // 142: Byteplus.Vod.Models.Business.VodListWorkflowExecutionResult
	(*business.VodGetWorkflowExecutionDetailResult)(nil),            // 143: Byteplus.Vod.Models.Business.VodGetWorkflowExecutionDetailResult
	(*business.WorkflowExecution)(nil),                              // 144: Byteplus.Vod.Models.Business.WorkflowExecution
	(*business.VodWorkflowResult)(nil),                              // 145: Byteplus.Vod.Models.Business.VodWorkflowResult
	(*business.SubmitDirectEditTaskAsyncResult)(nil),                // 146: Byteplus.Vod.Models.Business.SubmitDirectEditTaskAsyncResult
	(*business.GetDirectEditProgress)(nil),                          // 147: Byteplus.Vod.Models.Business.GetDirectEditProgress
	(*business.GetDirectEditResult)(nil),                            // 148: Byteplus.Vod.Models.Business.GetDirectEditResult
	(*business.VodSpaceInfo)(nil),                                   // 149: Byteplus.Vod.Models.Business.VodSpaceInfo
	(*business.VodDescribeVodSpaceStorageDataResult)(nil),           // 150: Byteplus.Vod.Models.Business.VodDescribeVodSpaceStorageDataResult
	(*business.VodDomainConfigInfo)(nil),                            // 151: Byteplus.Vod.Models.Business.VodDomainConfigInfo
	(*business.VodCreateCdnTaskResult)(nil),                         // 152: Byteplus.Vod.Models.Business.VodCreateCdnTaskResult
	(*business.VodCdnTaskResult)(nil),                               // 153: Byteplus.Vod.Models.Business.VodCdnTaskResult
	(*business.VodListCdnAccessLogResult)(nil),                      // 154: Byteplus.Vod.Models.Business.VodListCdnAccessLogResult
	(*business.VodListCdnTopAccessUrlResult)(nil),                   // 155: Byteplus.Vod.Models.Business.VodListCdnTopAccessUrlResult
	(*business.VodListCdnTopAccessResult)(nil),                      // 156: Byteplus.Vod.Models.Business.VodListCdnTopAccessResult
	(*business.VodDescribeVodDomainBandwidthDataResult)(nil),        // 157: Byteplus.Vod.Models.Business.VodDescribeVodDomainBandwidthDataResult
	(*business.VodCdnStatisticsCommonResult)(nil),                   // 158: Byteplus.Vod.Models.Business.VodCdnStatisticsCommonResult
	(*business.VodListCdnUsageDataDetailResult)(nil),                // 159: Byteplus.Vod.Models.Business.VodListCdnUsageDataDetailResult
	(*business.VodListCdnStatusDataDetailResult)(nil),               // 160: Byteplus.Vod.Models.Business.VodListCdnStatusDataDetailResult
	(*business.VodCdnIpInfo)(nil),                                   // 161: Byteplus.Vod.Models.Business.VodCdnIpInfo
	(*business.VodDescribeVodDomainTrafficDataResult)(nil),          // 162: Byteplus.Vod.Models.Business.VodDescribeVodDomainTrafficDataResult
	(*business.VodSubmitBlockTasksResult)(nil),                      // 163: Byteplus.Vod.Models.Business.VodSubmitBlockTasksResult
	(*business.VodGetContentBlockTasksResult)(nil),                  // 164: Byteplus.Vod.Models.Business.VodGetContentBlockTasksResult
	(*business.VodGetSmartStrategyLitePlayInfoResult)(nil),          // 165: Byteplus.Vod.Models.Business.VodGetSmartStrategyLitePlayInfoResult
	(*business.VodGetAppInfoResult)(nil),                            // 166: Byteplus.Vod.Models.Business.VodGetAppInfoResult
	(*business.DescribeVodSpaceTranscodeDataResult)(nil),            // 167: Byteplus.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult
	(*business.DescribeVodSpaceAIStatisDataResult)(nil),             // 168: Byteplus.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult
	(*business.DescribeVodSpaceSubtitleStatisDataResult)(nil),       // 169: Byteplus.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult
	(*business.DescribeVodSpaceDetectStatisDataResult)(nil),         // 170: Byteplus.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult
	(*business.DescribeVodSnapshotDataResult)(nil),                  // 171: Byteplus.Vod.Models.Business.DescribeVodSnapshotDataResult
	(*business.DescribeVodSpaceWorkflowDetailDataResult)(nil),       // 172: Byteplus.Vod.Models.Business.DescribeVodSpaceWorkflowDetailDataResult
	(*business.DescribeVodSpaceEditDetailDataResult)(nil),           // 173: Byteplus.Vod.Models.Business.DescribeVodSpaceEditDetailDataResult
	(*business.DescribeVodPlayFileLogByDomainResult)(nil),           // 174: Byteplus.Vod.Models.Business.DescribeVodPlayFileLogByDomainResult
	(*business.DescribeVodSpaceStorageDataFDResult)(nil),            // 175: Byteplus.Vod.Models.Business.DescribeVodSpaceStorageDataFDResult
	(*business.DescribeVodEnhanceImageDataResult)(nil),              // 176: Byteplus.Vod.Models.Business.DescribeVodEnhanceImageDataResult
	(*business.DescribeVodPlayedStatisDataResult)(nil),              // 177: Byteplus.Vod.Models.Business.DescribeVodPlayedStatisDataResult
	(*business.DescribeVodMostPlayedStatisDataResult)(nil),          // 178: Byteplus.Vod.Models.Business.DescribeVodMostPlayedStatisDataResult
	(*business.DescribeVodRealtimeMediaDataResult)(nil),             // 179: Byteplus.Vod.Models.Business.DescribeVodRealtimeMediaDataResult
	(*business.VodSubmitBlockMediaTaskResult)(nil),                  // 180: Byteplus.Vod.Models.Business.VodSubmitBlockMediaTaskResult
	(*business.VodSubmitUnblockMediaTaskResult)(nil),                // 181: Byteplus.Vod.Models.Business.VodSubmitUnblockMediaTaskResult
	(*business.VodQueryMediaBlockStatusResult)(nil),                 // 182: Byteplus.Vod.Models.Business.VodQueryMediaBlockStatusResult
	(*business.VodCreatePlaylistResult)(nil),                        // 183: Byteplus.Vod.Models.Business.VodCreatePlaylistResult
	(*business.VodGetPlaylistsResult)(nil),                          // 184: Byteplus.Vod.Models.Business.VodGetPlaylistsResult
	(*business.VodGetIntertrustApiKeyResult)(nil),                   // 185: Byteplus.Vod.Models.Business.VodGetIntertrustApiKeyResult
	(*business.VodGetFairPlayCertInfoResult)(nil),                   // 186: Byteplus.Vod.Models.Business.VodGetFairPlayCertInfoResult
	(*business.VodSetFairPlayCertInfoResult)(nil),                   // 187: Byteplus.Vod.Models.Business.VodSetFairPlayCertInfoResult
	(*business.VodGetFairPlayCertResult)(nil),                       // 188: Byteplus.Vod.Models.Business.VodGetFairPlayCertResult
	(*business.VodDrmLicenseResult)(nil),                            // 189: Byteplus.Vod.Models.Business.VodDrmLicenseResult
	(*business.VodSetMirrorSrcRuleResult)(nil),                      // 190: Byteplus.Vod.Models.Business.VodSetMirrorSrcRuleResult
	(*business.VodListMirrorSrcRuleResult)(nil),                     // 191: Byteplus.Vod.Models.Business.VodListMirrorSrcRuleResult
	(*business.VodListProjectsResult)(nil),                          // 192: Byteplus.Vod.Models.Business.VodListProjectsResult
}
var file_byteplus_vod_response_response_vod_proto_depIdxs = []int32{
	111, // 0: Byteplus.Vod.Models.Response.VodGetAllPlayInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	112, // 1: Byteplus.Vod.Models.Response.VodGetAllPlayInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodAllPlayInfoResult
	111, // 2: Byteplus.Vod.Models.Response.VodGetPlayInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	113, // 3: Byteplus.Vod.Models.Response.VodGetPlayInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodPlayInfoModel
	111, // 4: Byteplus.Vod.Models.Response.VodGetOriginalPlayInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	114, // 5: Byteplus.Vod.Models.Response.VodGetOriginalPlayInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetOriginalPlayInfoResult
	111, // 6: Byteplus.Vod.Models.Response.VodGetPrivateDrmPlayAuthResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	115, // 7: Byteplus.Vod.Models.Response.VodGetPrivateDrmPlayAuthResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetPrivateDrmPlayAuthResult
	111, // 8: Byteplus.Vod.Models.Response.VodGetHlsDecryptionKeyResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	116, // 9: Byteplus.Vod.Models.Response.VodGetHlsDecryptionKeyResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetHlsDecryptionKeyResult
	111, // 10: Byteplus.Vod.Models.Response.VodCreateHlsDecryptionKeyResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	117, // 11: Byteplus.Vod.Models.Response.VodCreateHlsDecryptionKeyResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCreateHlsDecryptionKeyResult
	111, // 12: Byteplus.Vod.Models.Response.VodGetPlayInfoWithLiveTimeShiftSceneResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	118, // 13: Byteplus.Vod.Models.Response.VodGetPlayInfoWithLiveTimeShiftSceneResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetPlayInfoWithLiveTimeShiftSceneResult
	111, // 14: Byteplus.Vod.Models.Response.VodUploadMediaResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	119, // 15: Byteplus.Vod.Models.Response.VodUploadMediaResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCommitData
	111, // 16: Byteplus.Vod.Models.Response.VodQueryUploadTaskInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	120, // 17: Byteplus.Vod.Models.Response.VodQueryUploadTaskInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodQueryData
	111, // 18: Byteplus.Vod.Models.Response.VodUrlUploadResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	121, // 19: Byteplus.Vod.Models.Response.VodUrlUploadResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodUrlResponseData
	111, // 20: Byteplus.Vod.Models.Response.VodApplyUploadInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	122, // 21: Byteplus.Vod.Models.Response.VodApplyUploadInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodApplyUploadInfoResult
	111, // 22: Byteplus.Vod.Models.Response.VodCommitUploadInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	123, // 23: Byteplus.Vod.Models.Response.VodCommitUploadInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCommitUploadInfoResult
	111, // 24: Byteplus.Vod.Models.Response.VodGetMediaInfosResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	124, // 25: Byteplus.Vod.Models.Response.VodGetMediaInfosResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetMediaInfosData
	111, // 26: Byteplus.Vod.Models.Response.VodUpdateMediaInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 27: Byteplus.Vod.Models.Response.VodGetRecommendedPosterResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	125, // 28: Byteplus.Vod.Models.Response.VodGetRecommendedPosterResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetRecPosterData
	111, // 29: Byteplus.Vod.Models.Response.VodUpdateMediaPublishStatusResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 30: Byteplus.Vod.Models.Response.VodUpdateMediaStorageClassResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	126, // 31: Byteplus.Vod.Models.Response.VodUpdateMediaStorageClassResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodUpdateMediaStorageClassData
	111, // 32: Byteplus.Vod.Models.Response.VodDeleteMediaResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	127, // 33: Byteplus.Vod.Models.Response.VodDeleteMediaResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDeleteMediaData
	111, // 34: Byteplus.Vod.Models.Response.VodDeleteTranscodesResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	128, // 35: Byteplus.Vod.Models.Response.VodDeleteTranscodesResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDeleteTranscodesData
	111, // 36: Byteplus.Vod.Models.Response.VodGetMediaListResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	129, // 37: Byteplus.Vod.Models.Response.VodGetMediaListResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetMediaListData
	111, // 38: Byteplus.Vod.Models.Response.VodGetSubtitleInfoListResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	130, // 39: Byteplus.Vod.Models.Response.VodGetSubtitleInfoListResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetSubtitleInfoListData
	111, // 40: Byteplus.Vod.Models.Response.VodUpdateSubtitleStatusResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	131, // 41: Byteplus.Vod.Models.Response.VodUpdateSubtitleStatusResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodUpdateSubtitleStatusData
	111, // 42: Byteplus.Vod.Models.Response.VodUpdateSubtitleInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 43: Byteplus.Vod.Models.Response.VodGetAuditFramesForAuditResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	132, // 44: Byteplus.Vod.Models.Response.VodGetAuditFramesForAuditResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetFramesForAuditResult
	111, // 45: Byteplus.Vod.Models.Response.VodGetMLFramesForAuditResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	132, // 46: Byteplus.Vod.Models.Response.VodGetMLFramesForAuditResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetFramesForAuditResult
	111, // 47: Byteplus.Vod.Models.Response.VodGetBetterFramesForAuditResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	133, // 48: Byteplus.Vod.Models.Response.VodGetBetterFramesForAuditResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetBetterFramesForAuditResult
	111, // 49: Byteplus.Vod.Models.Response.VodGetAudioInfoForAuditResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	134, // 50: Byteplus.Vod.Models.Response.VodGetAudioInfoForAuditResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetAudioInfoForAuditResult
	111, // 51: Byteplus.Vod.Models.Response.VodGetAutomaticSpeechRecognitionForAuditResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	135, // 52: Byteplus.Vod.Models.Response.VodGetAutomaticSpeechRecognitionForAuditResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetAutomaticSpeechRecognitionForAuditResult
	111, // 53: Byteplus.Vod.Models.Response.VodGetAudioEventDetectionForAuditResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	136, // 54: Byteplus.Vod.Models.Response.VodGetAudioEventDetectionForAuditResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetAudioEventDetectionForAuditResult
	111, // 55: Byteplus.Vod.Models.Response.VodCreateVideoClassificationResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	137, // 56: Byteplus.Vod.Models.Response.VodCreateVideoClassificationResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCreateVideoClassificationData
	111, // 57: Byteplus.Vod.Models.Response.VodUpdateVideoClassificationResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 58: Byteplus.Vod.Models.Response.VodDeleteVideoClassificationResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 59: Byteplus.Vod.Models.Response.VodListVideoClassificationsResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	138, // 60: Byteplus.Vod.Models.Response.VodListVideoClassificationsResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodVideoClassificationsData
	111, // 61: Byteplus.Vod.Models.Response.VodListSnapshotsResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	139, // 62: Byteplus.Vod.Models.Response.VodListSnapshotsResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodSnapshotData
	111, // 63: Byteplus.Vod.Models.Response.VodGetFileListResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	124, // 64: Byteplus.Vod.Models.Response.VodGetFileListResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetMediaInfosData
	111, // 65: Byteplus.Vod.Models.Response.VodExtractMediaMetaTaskResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 66: Byteplus.Vod.Models.Response.VodStartWorkflowResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	140, // 67: Byteplus.Vod.Models.Response.VodStartWorkflowResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodStartWorkflowResult
	111, // 68: Byteplus.Vod.Models.Response.VodRetrieveTranscodeResultResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	141, // 69: Byteplus.Vod.Models.Response.VodRetrieveTranscodeResultResponse.Result:type_name -> Byteplus.Vod.Models.Business.TranscodeResult
	111, // 70: Byteplus.Vod.Models.Response.VodListWorkflowExecutionResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	142, // 71: Byteplus.Vod.Models.Response.VodListWorkflowExecutionResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodListWorkflowExecutionResult
	111, // 72: Byteplus.Vod.Models.Response.VodGetWorkflowExecutionDetailResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	143, // 73: Byteplus.Vod.Models.Response.VodGetWorkflowExecutionDetailResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetWorkflowExecutionDetailResult
	111, // 74: Byteplus.Vod.Models.Response.VodGetWorkflowExecutionStatusResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	144, // 75: Byteplus.Vod.Models.Response.VodGetWorkflowExecutionStatusResponse.Result:type_name -> Byteplus.Vod.Models.Business.WorkflowExecution
	111, // 76: Byteplus.Vod.Models.Response.VodGetWorkflowResultResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	145, // 77: Byteplus.Vod.Models.Response.VodGetWorkflowResultResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodWorkflowResult
	111, // 78: Byteplus.Vod.Models.Response.VodSubmitDirectEditTaskAsyncResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	146, // 79: Byteplus.Vod.Models.Response.VodSubmitDirectEditTaskAsyncResponse.Result:type_name -> Byteplus.Vod.Models.Business.SubmitDirectEditTaskAsyncResult
	111, // 80: Byteplus.Vod.Models.Response.VodGetDirectEditProgressResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	147, // 81: Byteplus.Vod.Models.Response.VodGetDirectEditProgressResponse.Result:type_name -> Byteplus.Vod.Models.Business.GetDirectEditProgress
	111, // 82: Byteplus.Vod.Models.Response.VodGetDirectEditResultResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	148, // 83: Byteplus.Vod.Models.Response.VodGetDirectEditResultResponse.Result:type_name -> Byteplus.Vod.Models.Business.GetDirectEditResult
	111, // 84: Byteplus.Vod.Models.Response.VodCreateSpaceResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 85: Byteplus.Vod.Models.Response.VodListSpaceResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	149, // 86: Byteplus.Vod.Models.Response.VodListSpaceResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodSpaceInfo
	111, // 87: Byteplus.Vod.Models.Response.VodGetSpaceDetailResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	149, // 88: Byteplus.Vod.Models.Response.VodGetSpaceDetailResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodSpaceInfo
	111, // 89: Byteplus.Vod.Models.Response.VodUpdateSpaceResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 90: Byteplus.Vod.Models.Response.VodUpdateSpaceUploadConfigResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 91: Byteplus.Vod.Models.Response.VodDescribeVodSpaceStorageDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	150, // 92: Byteplus.Vod.Models.Response.VodDescribeVodSpaceStorageDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDescribeVodSpaceStorageDataResult
	111, // 93: Byteplus.Vod.Models.Response.VodStartDomainResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 94: Byteplus.Vod.Models.Response.VodStopDomainResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 95: Byteplus.Vod.Models.Response.VodUpdateDomainPlayRuleResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 96: Byteplus.Vod.Models.Response.VodAddDomainToSchedulerResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 97: Byteplus.Vod.Models.Response.VodRemoveDomainFromSchedulerResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 98: Byteplus.Vod.Models.Response.VodListDomainResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	151, // 99: Byteplus.Vod.Models.Response.VodListDomainResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDomainConfigInfo
	111, // 100: Byteplus.Vod.Models.Response.VodCreateCdnRefreshTaskResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	152, // 101: Byteplus.Vod.Models.Response.VodCreateCdnRefreshTaskResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCreateCdnTaskResult
	111, // 102: Byteplus.Vod.Models.Response.VodCreateCdnPreloadTaskResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	152, // 103: Byteplus.Vod.Models.Response.VodCreateCdnPreloadTaskResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCreateCdnTaskResult
	111, // 104: Byteplus.Vod.Models.Response.VodListCdnTasksResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	153, // 105: Byteplus.Vod.Models.Response.VodListCdnTasksResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCdnTaskResult
	111, // 106: Byteplus.Vod.Models.Response.VodListCdnAccessLogResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	154, // 107: Byteplus.Vod.Models.Response.VodListCdnAccessLogResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodListCdnAccessLogResult
	111, // 108: Byteplus.Vod.Models.Response.VodListCdnTopAccessUrlResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	155, // 109: Byteplus.Vod.Models.Response.VodListCdnTopAccessUrlResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodListCdnTopAccessUrlResult
	111, // 110: Byteplus.Vod.Models.Response.VodListCdnTopAccessResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	156, // 111: Byteplus.Vod.Models.Response.VodListCdnTopAccessResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodListCdnTopAccessResult
	111, // 112: Byteplus.Vod.Models.Response.VodDescribeVodDomainBandwidthDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	157, // 113: Byteplus.Vod.Models.Response.VodDescribeVodDomainBandwidthDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDescribeVodDomainBandwidthDataResult
	111, // 114: Byteplus.Vod.Models.Response.VodCdnStatisticsCommonResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	158, // 115: Byteplus.Vod.Models.Response.VodCdnStatisticsCommonResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCdnStatisticsCommonResult
	111, // 116: Byteplus.Vod.Models.Response.VodListCdnUsageDataDetailResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	159, // 117: Byteplus.Vod.Models.Response.VodListCdnUsageDataDetailResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodListCdnUsageDataDetailResult
	111, // 118: Byteplus.Vod.Models.Response.VodListCdnStatusDataDetailResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	160, // 119: Byteplus.Vod.Models.Response.VodListCdnStatusDataDetailResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodListCdnStatusDataDetailResult
	111, // 120: Byteplus.Vod.Models.Response.VodDescribeIPInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	161, // 121: Byteplus.Vod.Models.Response.VodDescribeIPInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCdnIpInfo
	111, // 122: Byteplus.Vod.Models.Response.VodDescribeVodDomainTrafficDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	162, // 123: Byteplus.Vod.Models.Response.VodDescribeVodDomainTrafficDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDescribeVodDomainTrafficDataResult
	111, // 124: Byteplus.Vod.Models.Response.VodSubmitBlockTasksResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	163, // 125: Byteplus.Vod.Models.Response.VodSubmitBlockTasksResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodSubmitBlockTasksResult
	111, // 126: Byteplus.Vod.Models.Response.VodGetContentBlockTasksResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	164, // 127: Byteplus.Vod.Models.Response.VodGetContentBlockTasksResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetContentBlockTasksResult
	111, // 128: Byteplus.Vod.Models.Response.VodCreateDomainV2Response.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 129: Byteplus.Vod.Models.Response.VodUpdateDomainExpireV2Response.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 130: Byteplus.Vod.Models.Response.VodUpdateDomainAuthConfigV2Response.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 131: Byteplus.Vod.Models.Response.AddOrUpdateCertificateV2Response.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 132: Byteplus.Vod.Models.Response.VodAddCallbackSubscriptionResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 133: Byteplus.Vod.Models.Response.VodSetCallbackEventResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 134: Byteplus.Vod.Models.Response.VodGetSmartStrategyLitePlayInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	165, // 135: Byteplus.Vod.Models.Response.VodGetSmartStrategyLitePlayInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetSmartStrategyLitePlayInfoResult
	111, // 136: Byteplus.Vod.Models.Response.VodGetAppInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	166, // 137: Byteplus.Vod.Models.Response.VodGetAppInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetAppInfoResult
	111, // 138: Byteplus.Vod.Models.Response.DescribeVodSpaceTranscodeDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	167, // 139: Byteplus.Vod.Models.Response.DescribeVodSpaceTranscodeDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult
	111, // 140: Byteplus.Vod.Models.Response.DescribeVodSpaceAIStatisDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	168, // 141: Byteplus.Vod.Models.Response.DescribeVodSpaceAIStatisDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult
	111, // 142: Byteplus.Vod.Models.Response.DescribeVodSpaceSubtitleStatisDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	169, // 143: Byteplus.Vod.Models.Response.DescribeVodSpaceSubtitleStatisDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult
	111, // 144: Byteplus.Vod.Models.Response.DescribeVodSpaceDetectStatisDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	170, // 145: Byteplus.Vod.Models.Response.DescribeVodSpaceDetectStatisDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult
	111, // 146: Byteplus.Vod.Models.Response.DescribeVodSnapshotDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	171, // 147: Byteplus.Vod.Models.Response.DescribeVodSnapshotDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodSnapshotDataResult
	111, // 148: Byteplus.Vod.Models.Response.DescribeVodSpaceWorkflowDetailDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	172, // 149: Byteplus.Vod.Models.Response.DescribeVodSpaceWorkflowDetailDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodSpaceWorkflowDetailDataResult
	111, // 150: Byteplus.Vod.Models.Response.DescribeVodSpaceEditDetailDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	173, // 151: Byteplus.Vod.Models.Response.DescribeVodSpaceEditDetailDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodSpaceEditDetailDataResult
	111, // 152: Byteplus.Vod.Models.Response.DescribeVodPlayFileLogByDomainResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	174, // 153: Byteplus.Vod.Models.Response.DescribeVodPlayFileLogByDomainResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodPlayFileLogByDomainResult
	111, // 154: Byteplus.Vod.Models.Response.DescribeVodSpaceStorageDataFDResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	175, // 155: Byteplus.Vod.Models.Response.DescribeVodSpaceStorageDataFDResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodSpaceStorageDataFDResult
	111, // 156: Byteplus.Vod.Models.Response.DescribeVodEnhanceImageDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	176, // 157: Byteplus.Vod.Models.Response.DescribeVodEnhanceImageDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodEnhanceImageDataResult
	111, // 158: Byteplus.Vod.Models.Response.DescribeVodPlayedStatisDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	177, // 159: Byteplus.Vod.Models.Response.DescribeVodPlayedStatisDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodPlayedStatisDataResult
	111, // 160: Byteplus.Vod.Models.Response.DescribeVodMostPlayedStatisDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	178, // 161: Byteplus.Vod.Models.Response.DescribeVodMostPlayedStatisDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodMostPlayedStatisDataResult
	111, // 162: Byteplus.Vod.Models.Response.DescribeVodRealtimeMediaDataResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	179, // 163: Byteplus.Vod.Models.Response.DescribeVodRealtimeMediaDataResponse.Result:type_name -> Byteplus.Vod.Models.Business.DescribeVodRealtimeMediaDataResult
	111, // 164: Byteplus.Vod.Models.Response.VodSubmitBlockMediaTaskResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	180, // 165: Byteplus.Vod.Models.Response.VodSubmitBlockMediaTaskResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodSubmitBlockMediaTaskResult
	111, // 166: Byteplus.Vod.Models.Response.VodSubmitUnblockMediaTaskResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	181, // 167: Byteplus.Vod.Models.Response.VodSubmitUnblockMediaTaskResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodSubmitUnblockMediaTaskResult
	111, // 168: Byteplus.Vod.Models.Response.VodQueryMediaBlockStatusResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	182, // 169: Byteplus.Vod.Models.Response.VodQueryMediaBlockStatusResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodQueryMediaBlockStatusResult
	111, // 170: Byteplus.Vod.Models.Response.VodCreatePlaylistResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	183, // 171: Byteplus.Vod.Models.Response.VodCreatePlaylistResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCreatePlaylistResult
	111, // 172: Byteplus.Vod.Models.Response.VodGetPlaylistsResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	184, // 173: Byteplus.Vod.Models.Response.VodGetPlaylistsResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetPlaylistsResult
	111, // 174: Byteplus.Vod.Models.Response.VodUpdatePlaylistResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 175: Byteplus.Vod.Models.Response.VodDeletePlaylistResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 176: Byteplus.Vod.Models.Response.VodGetIntertrustApiKeyResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	185, // 177: Byteplus.Vod.Models.Response.VodGetIntertrustApiKeyResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetIntertrustApiKeyResult
	111, // 178: Byteplus.Vod.Models.Response.VodSetIntertrustApiKeyResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 179: Byteplus.Vod.Models.Response.VodDeleteIntertrustApiKeyResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 180: Byteplus.Vod.Models.Response.VodGetFairPlayCertInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	186, // 181: Byteplus.Vod.Models.Response.VodGetFairPlayCertInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetFairPlayCertInfoResult
	111, // 182: Byteplus.Vod.Models.Response.VodSetFairPlayCertInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	187, // 183: Byteplus.Vod.Models.Response.VodSetFairPlayCertInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodSetFairPlayCertInfoResult
	111, // 184: Byteplus.Vod.Models.Response.VodDeleteFairPlayCertInfoResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 185: Byteplus.Vod.Models.Response.VodGetFairPlayCertResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	188, // 186: Byteplus.Vod.Models.Response.VodGetFairPlayCertResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetFairPlayCertResult
	111, // 187: Byteplus.Vod.Models.Response.VodGetDrmLicenseResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	189, // 188: Byteplus.Vod.Models.Response.VodGetDrmLicenseResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDrmLicenseResult
	111, // 189: Byteplus.Vod.Models.Response.VodSetMirrorSrcRuleResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	190, // 190: Byteplus.Vod.Models.Response.VodSetMirrorSrcRuleResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodSetMirrorSrcRuleResult
	111, // 191: Byteplus.Vod.Models.Response.VodDeleteMirrorSrcRuleResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	111, // 192: Byteplus.Vod.Models.Response.VodListMirrorSrcRuleResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	191, // 193: Byteplus.Vod.Models.Response.VodListMirrorSrcRuleResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodListMirrorSrcRuleResult
	111, // 194: Byteplus.Vod.Models.Response.VodListProjectsResponse.ResponseMetadata:type_name -> Byteplus.Base.Models.Base.ResponseMetadata
	192, // 195: Byteplus.Vod.Models.Response.VodListProjectsResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodListProjectsResult
	196, // [196:196] is the sub-list for method output_type
	196, // [196:196] is the sub-list for method input_type
	196, // [196:196] is the sub-list for extension type_name
	196, // [196:196] is the sub-list for extension extendee
	0,   // [0:196] is the sub-list for field type_name
}

func init() { file_byteplus_vod_response_response_vod_proto_init() }
func file_byteplus_vod_response_response_vod_proto_init() {
	if File_byteplus_vod_response_response_vod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_byteplus_vod_response_response_vod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAllPlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetOriginalPlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPrivateDrmPlayAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetHlsDecryptionKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateHlsDecryptionKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlayInfoWithLiveTimeShiftSceneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryUploadTaskInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetRecommendedPosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaPublishStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaStorageClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteTranscodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSubtitleInfoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSubtitleStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSubtitleInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAuditFramesForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMLFramesForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetBetterFramesForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAudioInfoForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAutomaticSpeechRecognitionForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAudioEventDetectionForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateVideoClassificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateVideoClassificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteVideoClassificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListVideoClassificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListSnapshotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetFileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodExtractMediaMetaTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStartWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodRetrieveTranscodeResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListWorkflowExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetWorkflowExecutionDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetWorkflowExecutionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetWorkflowResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitDirectEditTaskAsyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetDirectEditProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetDirectEditResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSpaceDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSpaceUploadConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeVodSpaceStorageDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStartDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStopDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateDomainPlayRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodAddDomainToSchedulerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodRemoveDomainFromSchedulerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateCdnRefreshTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateCdnPreloadTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnAccessLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnTopAccessUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnTopAccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeVodDomainBandwidthDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCdnStatisticsCommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnUsageDataDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnStatusDataDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeIPInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeVodDomainTrafficDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitBlockTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetContentBlockTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateDomainV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateDomainExpireV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateDomainAuthConfigV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrUpdateCertificateV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodAddCallbackSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSetCallbackEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSmartStrategyLitePlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAppInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceAIStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceSubtitleStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceDetectStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSnapshotDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceWorkflowDetailDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditDetailDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodPlayFileLogByDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceStorageDataFDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodEnhanceImageDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodPlayedStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodMostPlayedStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodRealtimeMediaDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitBlockMediaTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitUnblockMediaTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryMediaBlockStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreatePlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlaylistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdatePlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeletePlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetIntertrustApiKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSetIntertrustApiKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteIntertrustApiKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetFairPlayCertInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSetFairPlayCertInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteFairPlayCertInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetFairPlayCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetDrmLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSetMirrorSrcRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteMirrorSrcRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListMirrorSrcRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_byteplus_vod_response_response_vod_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_byteplus_vod_response_response_vod_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   111,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_byteplus_vod_response_response_vod_proto_goTypes,
		DependencyIndexes: file_byteplus_vod_response_response_vod_proto_depIdxs,
		MessageInfos:      file_byteplus_vod_response_response_vod_proto_msgTypes,
	}.Build()
	File_byteplus_vod_response_response_vod_proto = out.File
	file_byteplus_vod_response_response_vod_proto_rawDesc = nil
	file_byteplus_vod_response_response_vod_proto_goTypes = nil
	file_byteplus_vod_response_response_vod_proto_depIdxs = nil
}
